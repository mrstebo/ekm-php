<?php
/**
 * ProductVariantsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Mrstebo\EkmPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * EKM Partner API
 *
 * Our new API allows partners to build significantly better integrations with the EKM platform.    To try out the below endpoints, or for full up to date representations of the request / response models, please see the [swagger page](https://api.ekm.net/swagger/index.html). (We display examples here, but the swagger page is guaranteed to show the complete model.)    To keep up to date with the latest updates, please see our [RSS feed](https://partners.ekm.net/ChangeLog/Feed) or the [partner dashboard](https://partners.ekm.net/).
 *
 * The version of the OpenAPI document: Latest
 * Contact: api-support@ekm.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Mrstebo\EkmPHP\Test\Api;

use \Mrstebo\EkmPHP\Configuration;
use \Mrstebo\EkmPHP\ApiException;
use \Mrstebo\EkmPHP\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductVariantsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Mrstebo\EkmPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductVariantsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productVariantsAssignImageByUrlToProduct
     *
     * Set a variants image to a URL.
     *
     */
    public function testProductVariantsAssignImageByUrlToProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsCreate
     *
     * Add a variant to a product.
     *
     */
    public function testProductVariantsCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsDelete
     *
     * Delete a variant.
     *
     */
    public function testProductVariantsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsGet
     *
     * Get a product variant.
     *
     */
    public function testProductVariantsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsGetAll
     *
     * Get a products variants.
     *
     */
    public function testProductVariantsGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsGetProductImages
     *
     * Get a variant's images..
     *
     */
    public function testProductVariantsGetProductImages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsGetProductVariant
     *
     * Get a product variant.
     *
     */
    public function testProductVariantsGetProductVariant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsSearch
     *
     * Searches variants based on search criteria.
     *
     */
    public function testProductVariantsSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productVariantsUpdate
     *
     * Update a product variant.
     *
     */
    public function testProductVariantsUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
