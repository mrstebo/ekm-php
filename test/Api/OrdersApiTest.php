<?php
/**
 * OrdersApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  EkmPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * EKM Partner API
 *
 * Our new API allows partners to build significantly better integrations with the EKM platform.    To try out the below endpoints, or for full up to date representations of the request / response models, please see the [swagger page](https://api.ekm.net/swagger/index.html). (We display examples here, but the swagger page is guaranteed to show the complete model.)    To keep up to date with the latest updates, please see our [RSS feed](https://partners.ekm.net/ChangeLog/Feed) or the [partner dashboard](https://partners.ekm.net/).
 *
 * The version of the OpenAPI document: Latest
 * Contact: api-support@ekm.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace EkmPHP\Test\Api;

use \EkmPHP\Configuration;
use \EkmPHP\ApiException;
use \EkmPHP\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  EkmPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for ordersGetAll
     *
     * Get a paginated set of orders.
     *
     */
    public function testOrdersGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGetById
     *
     * Get an order by ID.
     *
     */
    public function testOrdersGetById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGetCustomFields
     *
     * Get custom fields for an order.
     *
     */
    public function testOrdersGetCustomFields()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGetItems
     *
     * Get an order's items.
     *
     */
    public function testOrdersGetItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGetOrderItemById
     *
     * Get a specific item from an order.
     *
     */
    public function testOrdersGetOrderItemById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersSearch
     *
     * Searches orders based on search criteria.
     *
     */
    public function testOrdersSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersUpdateDeliveryTracking
     *
     * Updates delivery tracking info for an order.
     *
     */
    public function testOrdersUpdateDeliveryTracking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersUpdateInternalNotes
     *
     * Updates internal notes for an order.
     *
     */
    public function testOrdersUpdateInternalNotes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersUpdateStatus
     *
     * Updates the status of an order.
     *
     */
    public function testOrdersUpdateStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
