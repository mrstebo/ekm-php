{
  "openapi": "3.0.1",
  "info": {
    "title": "EKM Partner API",
    "description": "Our new API allows partners to build significantly better integrations with the EKM platform.\r\n\r\nTo try out the below endpoints, or for full up to date representations of the request / response models, please see the [swagger page](https://api.ekm.net/swagger/index.html). (We display examples here, but the swagger page is guaranteed to show the complete model.)\r\n\r\nTo keep up to date with the latest updates, please see our [RSS feed](https://partners.ekm.net/ChangeLog/Feed) or the [partner dashboard](https://partners.ekm.net/).",
    "contact": {
      "name": "EKM",
      "url": "https://ekm.com",
      "email": "api-support@ekm.com"
    },
    "version": "Latest",
    "x-logo": {
      "url": "/images/ekm-logo-vector-RGB-1920x1080.png",
      "backgroundColor": "#fafafa"
    }
  },
  "servers": [
    {
      "url": "https://api.ekm.net"
    }
  ],
  "paths": {
    "/api/v1/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category",
        "operationId": "Categories_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The category ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The category ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The chosen category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Category"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 130,
    "name": "EKM - ducimus",
    "description": "Suscipit libero repudiandae fugit tenetur. Eum ea animi et dolores maxime. Laborum possimus fuga qui qui. Esse tenetur porro recusandae aliquid cupiditate consectetur consectetur sint. Et reiciendis sit maiores perferendis vel sint. Tempora perferendis sint ea repudiandae minus consectetur ut inventore.",
    "in_category_description": "Aut in eos incidunt harum. Ex et minus natus officia voluptas. Enim eum cum cupiditate.",
    "meta_description": null,
    "meta_keywords": null,
    "meta_title": null,
    "order_location": 0,
    "live": true,
    "parent_category_id": null,
    "image_id": null,
    "in_category_image_id": null,
    "last_updated": null
  }
}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No category for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update a category",
        "operationId": "Categories_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The category ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The category ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1UpdateCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Category"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 131,
    "name": "EKM - ipsam",
    "description": "Incidunt quo consequatur deserunt vel. Inventore ipsa maiores quod ducimus totam aspernatur officiis esse repellat. Placeat omnis natus. Voluptas amet magnam quidem magnam porro quae dicta. Nam officia ullam. Dicta voluptatem voluptas ut pariatur minus quis ipsam harum.",
    "in_category_description": "Quia nam voluptas. Eum et omnis omnis velit est totam et iste tenetur. Sit aut tenetur molestiae. Vero ipsum ad. Voluptatem ut autem eveniet illum consectetur nisi magni consectetur. Sint qui reprehenderit voluptatem.",
    "meta_description": null,
    "meta_keywords": null,
    "meta_title": null,
    "order_location": 0,
    "live": true,
    "parent_category_id": null,
    "image_id": null,
    "in_category_image_id": null,
    "last_updated": null
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No category for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "operationId": "Categories_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The category ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The category ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Category"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a paginated set of categories",
        "operationId": "Categories_GetAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Category"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/categories?page=1"
    },
    {
      "rel": "next",
      "href": "/categories?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 1,
      "name": "EKM - aliquam",
      "description": "Eum aspernatur numquam dolorum laborum quia ipsam est omnis commodi. Nihil sint aliquam tenetur reprehenderit. Placeat mollitia qui aut earum aut voluptatem. Praesentium quam iusto ut temporibus.",
      "in_category_description": "Atque amet doloremque quasi inventore ipsum ut accusantium. Ipsum ut eum maiores molestiae ad. Error adipisci at ea distinctio dolorum consequatur rerum sunt hic. Voluptatem temporibus debitis sit omnis. Distinctio eius qui modi aut sit consequatur. Similique nisi impedit cum.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 2,
      "name": "EKM - sit",
      "description": "Sit sed accusamus ut itaque blanditiis eaque et sit ratione. Odit rerum iure labore animi doloribus molestias voluptas quia quia. Expedita nobis eos corrupti adipisci explicabo ad. Non voluptates tempore autem ut.",
      "in_category_description": "Quo dolorem quae. Aliquid unde beatae ut tempora deleniti qui. Maxime quisquam dolorem at tenetur.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 3,
      "name": "EKM - cumque",
      "description": "Amet atque qui voluptatem rerum deserunt rerum itaque quasi iusto. Quam doloribus deserunt voluptatem nobis veniam cumque. Asperiores culpa dolor quidem consequatur quis voluptas provident sunt. Illo porro cum. Quis illum ex quis dolor.",
      "in_category_description": "Nam qui fugiat autem ut ea suscipit voluptatem sunt. Sunt aliquam nulla facilis ullam voluptate. Dignissimos saepe dolor inventore enim saepe sit porro fugiat. Dolorum est quibusdam. Et voluptatem explicabo sit odio.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 4,
      "name": "EKM - hic",
      "description": "Delectus molestiae vel. Iste deleniti laudantium. Nobis quasi velit molestias non rerum et cumque aliquid. Vel architecto dolores ipsam. Autem omnis quia quasi incidunt facere ipsam eos. Consequatur voluptate non placeat cum enim.",
      "in_category_description": "Magnam consequatur voluptate unde commodi quis eum. Cupiditate reprehenderit reiciendis consectetur dolores assumenda ut. Quo consequatur modi vel voluptate ut architecto consequatur. Tenetur quas occaecati a.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 5,
      "name": "EKM - placeat",
      "description": "Voluptates minima dolorem. Voluptates dolorem perferendis corrupti. Blanditiis nihil commodi suscipit libero quia ut molestias minima.",
      "in_category_description": "Dicta a magni sit non eaque suscipit voluptate. Eos distinctio est consequatur itaque veniam vero earum assumenda. Perspiciatis doloribus id officia tenetur non quo aperiam.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add a category",
        "operationId": "Categories_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1AddCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Category"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 137,
    "name": "EKM - perspiciatis",
    "description": "Perferendis cum quo aliquid tenetur. Ratione consequatur sed officiis fugiat id cumque recusandae autem recusandae. In iure totam nostrum id ut dolores nobis aliquid quis. Corrupti eius alias autem. Occaecati nulla maiores veritatis perferendis voluptatibus voluptas impedit dolores.",
    "in_category_description": "Quo eum aperiam et nesciunt mollitia porro harum sequi. Aut minima dolores numquam. Id culpa aut voluptatem voluptatibus accusamus eaque eum. Sunt consequatur accusamus voluptatibus. Inventore possimus sequi dolorem tempore dolor.",
    "meta_description": null,
    "meta_keywords": null,
    "meta_title": null,
    "order_location": 0,
    "live": true,
    "parent_category_id": null,
    "image_id": null,
    "in_category_image_id": null,
    "last_updated": null
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/categories/search": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Searches categories based on search criteria",
        "operationId": "Categories_Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. live eq true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Category"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/categories?page=1"
    },
    {
      "rel": "next",
      "href": "/categories?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 1,
      "name": "EKM - ullam",
      "description": "Sit saepe quas consequatur rerum et perspiciatis error. Nulla ut autem placeat id illum qui repellat tempore. Pariatur error aliquid qui minus numquam explicabo. Illum fugit laudantium et consequatur quis.",
      "in_category_description": "Nihil deleniti et in non quidem cupiditate a voluptatem quidem. Enim voluptatem laboriosam. Tempore aut maxime totam sequi libero dolorem. Voluptatem perspiciatis non qui qui iure velit voluptatibus sunt. Dolor reprehenderit odit et ad nisi numquam ipsa reprehenderit impedit. Dolor repellendus eum.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 2,
      "name": "EKM - deleniti",
      "description": "Quia dolorum qui quo quis quaerat quo ut vero. Voluptates quasi sunt. Et hic molestiae et rerum voluptatum quia. In magnam aut minima praesentium tempore aut omnis dolorem. Sint animi sunt ea.",
      "in_category_description": "Quos dolores reprehenderit voluptatem. Nisi nemo ut illum aspernatur dignissimos. Ex qui sed inventore. Corrupti eius similique animi aut et eaque.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 3,
      "name": "EKM - quis",
      "description": "Distinctio sequi aut sint. Cum quaerat facere consequatur vitae. Esse inventore rerum.",
      "in_category_description": "Ea tempora placeat ea nobis quo. Maiores animi eos nihil sunt deleniti sit ex omnis. Dolorem facilis vel nulla culpa.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 4,
      "name": "EKM - voluptatem",
      "description": "Reprehenderit est reiciendis. Quasi neque dolorum praesentium omnis dignissimos vel. Eligendi quos hic exercitationem maiores sint sequi aut. Enim deleniti qui magnam explicabo saepe ullam voluptas. Omnis architecto adipisci corporis exercitationem maiores aut.",
      "in_category_description": "Reiciendis vitae fugit molestiae necessitatibus ut voluptatem. Tempore optio occaecati eos nam repellat culpa velit. Dolore magnam suscipit. Enim quia magni itaque nam id et iure velit sapiente.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    },
    {
      "id": 5,
      "name": "EKM - esse",
      "description": "Dolor necessitatibus sunt ut officia amet. Totam eius animi. Possimus aut beatae et saepe quia quod et quasi. Impedit omnis voluptatibus doloribus tempora et quisquam. Voluptatum id aut minima.",
      "in_category_description": "Est quo est distinctio veritatis ut molestias ab quisquam. Sit omnis distinctio vel dolores. Eius repellendus excepturi. Totam magni deserunt ex commodi eum vel tempora maxime.",
      "meta_description": null,
      "meta_keywords": null,
      "meta_title": null,
      "order_location": 0,
      "live": true,
      "parent_category_id": null,
      "image_id": null,
      "in_category_image_id": null,
      "last_updated": null
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/categories/{id}/subcategories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a paginated set of subcategories",
        "operationId": "Categories_Subcategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of subcategories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1SubCategory"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/categories?page=1"
    },
    {
      "rel": "next",
      "href": "/categories?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "parent_category_id": 2,
      "category_id": 1,
      "name": "EKM - eos",
      "description": "Fugiat quaerat molestiae illo ea vitae. Fugiat quae expedita eaque expedita consequatur tempore. Voluptates maxime qui sint. Voluptas ducimus aliquid natus dolore. Ullam cum vero minima nemo eos.",
      "order_location": 0,
      "live": true,
      "is_category_managed": false
    },
    {
      "parent_category_id": 4,
      "category_id": 2,
      "name": "EKM - et",
      "description": "Ea rerum odio dolorum eos eius soluta dolor. Sunt recusandae unde est et rem atque exercitationem nisi. Quo eum et consequatur consequatur doloribus. Necessitatibus reiciendis assumenda aliquid dolor ipsa aut hic quod. Corporis fugiat vel.",
      "order_location": 0,
      "live": true,
      "is_category_managed": false
    },
    {
      "parent_category_id": 6,
      "category_id": 3,
      "name": "EKM - aspernatur",
      "description": "Sed totam enim et est iusto eum quibusdam. Sint modi doloribus. Dolores occaecati harum et ex.",
      "order_location": 0,
      "live": true,
      "is_category_managed": false
    },
    {
      "parent_category_id": 8,
      "category_id": 4,
      "name": "EKM - voluptas",
      "description": "Laudantium repudiandae saepe. Quod quas ducimus dolor praesentium delectus. Et porro consequatur eveniet dolores. Quia blanditiis deserunt. Laboriosam distinctio illum fugit laborum et quas libero sed voluptatem.",
      "order_location": 0,
      "live": true,
      "is_category_managed": false
    },
    {
      "parent_category_id": 10,
      "category_id": 5,
      "name": "EKM - est",
      "description": "Architecto iste quam quam et recusandae itaque et. Unde non commodi dolorum magni dolorum eos. Sit accusamus odit ipsa consequuntur aliquam architecto. Magni quaerat earum molestias quaerat.",
      "order_location": 0,
      "live": true,
      "is_category_managed": false
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No category for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/categories/{id}/categorymanaged/{childCategoryId}": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Set a category to be managed by another category",
        "operationId": "Categories_SetCategoryManaged",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "childCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The added managed category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1SubCategory"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "parent_category_id": 1,
    "category_id": 10,
    "name": "Subcategory",
    "description": null,
    "order_location": 99999,
    "live": true,
    "is_category_managed": true
  }
}
              }
            }
          },
          "400": {
            "description": "A subcategory or managed category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No category or child category for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Stops a category from being managed by another category",
        "operationId": "Categories_DeleteCategoryManaged",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "childCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The removed managed category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1SubCategory"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No managed category found for that child category ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/categories/{id}/filters": {
      "put": {
        "tags": [
          "Categories"
        ],
        "operationId": "Categories_UpdateCategoryFilters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1CategoryFilters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Category"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "brand": true,
    "price": true,
    "condition": true,
    "attributes": [
      "SIZE"
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "Categories_GetCategoryFilters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1CategoryFilters"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "brand": true,
    "price": true,
    "condition": true,
    "attributes": [
      "SIZE"
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers/{customerId}/addresses/{addressId}": {
      "get": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Get a single Customer Address by Id",
        "operationId": "CustomerAddresses_GetById",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "The Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Address Id",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Customer Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1CustomerAddress"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "created_date": "2020-12-24T12:27:54.4114241Z",
    "modified_date": "2021-03-14T09:58:07.7315464Z",
    "customer_id": 0,
    "is_preferred_billing_address": true,
    "is_preferred_shipping_address": true,
    "first_name": "Marquise",
    "last_name": "Hauck",
    "company": "Swaniawski, Heathcote and Kirlin",
    "address": "3073 Aniya Glens",
    "address2": null,
    "town": "Madisenborough",
    "county": "Buckinghamshire",
    "country": "GB",
    "friendly_country": "United Kingdom",
    "post_code": null,
    "telephone": "1-991-785-6892",
    "fax": "930-476-9126 x4158"
  }
}
              }
            }
          },
          "404": {
            "description": "No Customer or Address for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Update a Customer Address",
        "operationId": "CustomerAddresses_Update",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "The Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Address Id",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Customer Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Customer"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "created_date": "2021-02-26T09:07:05.3572647Z",
    "modified_date": "2020-10-06T16:10:18.9067602Z",
    "customer_id": 0,
    "is_preferred_billing_address": true,
    "is_preferred_shipping_address": true,
    "first_name": "Elissa",
    "last_name": "Kunde",
    "company": "Hand Inc",
    "address": "09516 Connelly Crossroad",
    "address2": null,
    "town": "Klingborough",
    "county": "Avon",
    "country": "GB",
    "friendly_country": "United Kingdom",
    "post_code": null,
    "telephone": "1-686-624-5464 x2648",
    "fax": "696.811.5559 x17471"
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "first_name"
      ],
      "error_message": "The first_name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No Customer or Address for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Delete a Customer Address",
        "operationId": "CustomerAddresses_Delete",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "The Address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Address Id",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer Address deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1CustomerAddress"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "created_date": "2020-10-10T14:23:22.4858109Z",
    "modified_date": "2020-06-28T01:00:43.283845Z",
    "customer_id": 0,
    "is_preferred_billing_address": true,
    "is_preferred_shipping_address": true,
    "first_name": "Sheridan",
    "last_name": "Okuneva",
    "company": "Kling - Lubowitz",
    "address": "9784 Murray River",
    "address2": null,
    "town": "Makenzieland",
    "county": "Avon",
    "country": "GB",
    "friendly_country": "United Kingdom",
    "post_code": null,
    "telephone": "1-685-719-3717",
    "fax": "737-531-7600"
  }
}
              }
            }
          },
          "404": {
            "description": "No Customer for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers/{customerId}/addresses": {
      "get": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Get a paginated set of Customer Addresses",
        "operationId": "CustomerAddresses_GetAll",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of Customer Addresses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1CustomerAddress"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/customers?page=1"
    },
    {
      "rel": "next",
      "href": "/customers?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 0,
      "created_date": "2020-04-11T14:30:52.8219973Z",
      "modified_date": "2020-10-21T18:56:52.9595001Z",
      "customer_id": 0,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": true,
      "first_name": "Louie",
      "last_name": "Harvey",
      "company": "Aufderhar, Armstrong and Jacobs",
      "address": "0573 Fermin Roads",
      "address2": null,
      "town": "Archborough",
      "county": "Bedfordshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": null,
      "telephone": "(460) 243-0039",
      "fax": "(209) 231-5062 x466"
    },
    {
      "id": 0,
      "created_date": "2020-05-28T09:31:11.7385923Z",
      "modified_date": "2021-01-17T03:59:19.8185176Z",
      "customer_id": 0,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": true,
      "first_name": "Julio",
      "last_name": "Feil",
      "company": "Schaefer - Gleichner",
      "address": "405 Maryam Unions",
      "address2": null,
      "town": "Goldenburgh",
      "county": "Avon",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": null,
      "telephone": "(758) 906-5258 x83900",
      "fax": "293-211-1824 x6450"
    },
    {
      "id": 0,
      "created_date": "2020-04-25T09:05:14.3221174Z",
      "modified_date": "2020-09-11T04:38:12.694552Z",
      "customer_id": 0,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": true,
      "first_name": "Maybelle",
      "last_name": "Marquardt",
      "company": "Kub, Fisher and Kirlin",
      "address": "31339 Carter Corners",
      "address2": null,
      "town": "North Shanna",
      "county": "Borders",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": null,
      "telephone": "1-476-886-5590",
      "fax": "(568) 917-5380 x1107"
    },
    {
      "id": 0,
      "created_date": "2020-08-31T03:15:33.8504144Z",
      "modified_date": "2020-11-26T03:22:17.5342595Z",
      "customer_id": 0,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": true,
      "first_name": "Monte",
      "last_name": "Stokes",
      "company": "Metz Group",
      "address": "766 Becker Radial",
      "address2": null,
      "town": "Lake Aurelia",
      "county": "Berkshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": null,
      "telephone": "357.765.4621 x66880",
      "fax": "259.784.7010 x771"
    },
    {
      "id": 0,
      "created_date": "2020-04-24T18:51:30.1139839Z",
      "modified_date": "2021-01-28T06:10:37.3990975Z",
      "customer_id": 0,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": true,
      "first_name": "Tito",
      "last_name": "Frami",
      "company": "Stiedemann, Romaguera and Greenfelder",
      "address": "927 Veum Falls",
      "address2": null,
      "town": "West Pearlinehaven",
      "county": "Borders",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": null,
      "telephone": "1-554-217-9465",
      "fax": "767.650.1121 x3167"
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Add a Customer Address",
        "operationId": "CustomerAddresses_Create",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added Customer Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1CustomerAddress"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "created_date": "2021-01-30T14:47:23.9985098Z",
    "modified_date": "2020-10-03T00:50:17.7532267Z",
    "customer_id": 0,
    "is_preferred_billing_address": true,
    "is_preferred_shipping_address": true,
    "first_name": "Amelie",
    "last_name": "Dietrich",
    "company": "Lynch LLC",
    "address": "69890 Kristin Court",
    "address2": null,
    "town": "Croninport",
    "county": "Berkshire",
    "country": "GB",
    "friendly_country": "United Kingdom",
    "post_code": null,
    "telephone": "926.773.0098 x716",
    "fax": "628.944.4599 x41313"
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "first_name"
      ],
      "error_message": "The first_name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No Customer for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers/{customerId}/addresses/search": {
      "get": {
        "tags": [
          "CustomerAddresses"
        ],
        "summary": "Searches customer addresses based on search criteria",
        "operationId": "CustomerAddresses_Search",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The Customer Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customer Id",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int34"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int34"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. email_address eq 'test@ekm.com'",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of customer adresses based on search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1CustomerAddress"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/customers?page=1"
    },
    {
      "rel": "next",
      "href": "/customers?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 190,
      "email_address": "Miguel.Reilly9@yahoo.com",
      "first_name": "Terrance",
      "last_name": "Ebert",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-11-20T04:21:55.018325Z",
      "modified_date": "2020-05-21T16:41:06.8872449Z",
      "last_login_date": "2020-06-04T03:41:38.8006035Z",
      "last_login_attempt_date": "2020-11-23T10:42:17.2773329Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2021-01-17T06:33:53.4153904Z",
          "modified_date": "2021-01-05T17:55:21.3893273Z",
          "customer_id": 190,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Emilia",
          "last_name": "Altenwerth",
          "company": "Gislason - Ziemann",
          "address": "4815 Rau Manor",
          "address2": "Carolinechester",
          "town": "West Drewville",
          "county": "Borders",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "GH0 3PV",
          "telephone": "(929) 522-9626",
          "fax": "1-814-848-6547 x1649"
        }
      ]
    },
    {
      "id": 191,
      "email_address": "Charlene_Robel@gmail.com",
      "first_name": "Stephanie",
      "last_name": "Stark",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-06-02T03:40:27.2210127Z",
      "modified_date": "2020-09-27T19:32:21.4385491Z",
      "last_login_date": "2020-05-04T23:26:29.8430253Z",
      "last_login_attempt_date": "2020-07-30T12:05:39.6379463Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2021-01-17T09:35:59.3314231Z",
          "modified_date": "2021-02-25T14:03:13.4014533Z",
          "customer_id": 191,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Camryn",
          "last_name": "Torphy",
          "company": "Johnson - Koss",
          "address": "550 Murazik Lodge",
          "address2": "New Sarinaberg",
          "town": "Bahringerchester",
          "county": "Buckinghamshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "DX8 2NZ",
          "telephone": "300.610.3478",
          "fax": "230-881-1861 x618"
        }
      ]
    },
    {
      "id": 192,
      "email_address": "Mandy.Tromp@hotmail.com",
      "first_name": "Everett",
      "last_name": "Pfannerstill",
      "order_count": 1,
      "loyalty_points": 0.0,
      "created_date": "2020-09-25T08:06:51.8036522Z",
      "modified_date": "2021-03-17T13:23:23.0232972Z",
      "last_login_date": "2021-03-12T13:34:30.4344842Z",
      "last_login_attempt_date": "2021-01-30T13:50:58.733772Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-10-14T05:14:26.5662316Z",
          "modified_date": "2020-10-12T15:21:23.9655412Z",
          "customer_id": 192,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Kaya",
          "last_name": "Conroy",
          "company": "Rodriguez - Green",
          "address": "0484 Trinity Port",
          "address2": "South Felicitahaven",
          "town": "Hillltown",
          "county": "Avon",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "QJ7 8QW",
          "telephone": "1-586-370-0238 x71410",
          "fax": "496-346-3003"
        }
      ]
    },
    {
      "id": 193,
      "email_address": "Dana28@yahoo.com",
      "first_name": "Dwight",
      "last_name": "Yost",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-05-20T23:18:37.3879205Z",
      "modified_date": "2021-01-22T17:15:53.5315608Z",
      "last_login_date": "2020-07-23T05:36:12.4649713Z",
      "last_login_attempt_date": "2020-04-16T11:29:11.0793779Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2021-03-12T05:17:35.5960959Z",
          "modified_date": "2021-01-19T10:52:54.758916Z",
          "customer_id": 193,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Bridgette",
          "last_name": "Frami",
          "company": "Davis, Green and Feil",
          "address": "9773 Rempel Bridge",
          "address2": "Grahamtown",
          "town": "New Leonorchester",
          "county": "Berkshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "FN5 3ES",
          "telephone": "1-517-835-2991 x23298",
          "fax": "1-411-615-1456 x18370"
        }
      ]
    },
    {
      "id": 194,
      "email_address": "Ebony.Mosciski46@yahoo.com",
      "first_name": "Alfonzo",
      "last_name": "Baumbach",
      "order_count": 1,
      "loyalty_points": 1.0,
      "created_date": "2020-12-20T02:25:36.6002415Z",
      "modified_date": "2020-04-11T05:42:09.7334543Z",
      "last_login_date": "2020-08-18T22:04:42.0975679Z",
      "last_login_attempt_date": "2020-10-13T11:45:54.3300349Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-05-22T12:51:00.0970733Z",
          "modified_date": "2020-04-19T06:33:46.4715309Z",
          "customer_id": 194,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Jerald",
          "last_name": "Williamson",
          "company": "Jakubowski, Schowalter and Roberts",
          "address": "7320 Kunze Shores",
          "address2": "Horaceview",
          "town": "West Shanamouth",
          "county": "Bedfordshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "LC2 1UQ",
          "telephone": "(717) 673-2191 x206",
          "fax": "1-872-471-3651 x03212"
        }
      ]
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a single Customer by Id",
        "operationId": "Customers_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Customers Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Customers Id",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Customer"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 195,
    "email_address": "Norma_Watsica@yahoo.com",
    "first_name": "Deshaun",
    "last_name": "Johnson",
    "order_count": 1,
    "loyalty_points": 1.0,
    "created_date": "2020-07-30T18:20:03.693989Z",
    "modified_date": "2020-09-28T01:44:25.9274593Z",
    "last_login_date": "2020-10-15T20:29:16.2230985Z",
    "last_login_attempt_date": "2020-08-21T17:12:41.2766098Z",
    "locked": false,
    "locked_date": null,
    "locked_end_date": null,
    "is_subscribed_to_newsletter": false,
    "addresses": [
      {
        "id": 0,
        "created_date": "2020-06-28T18:43:23.3291786Z",
        "modified_date": "2021-03-24T15:07:05.7482794Z",
        "customer_id": 195,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "first_name": "Bernie",
        "last_name": "Muller",
        "company": "Parisian, Abernathy and Bergstrom",
        "address": "7045 Marquise Roads",
        "address2": "Linaborough",
        "town": "Runteshire",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "XQ4 4XN",
        "telephone": "1-599-661-1972",
        "fax": "380.877.7981 x243"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "No Customer for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a Customer",
        "operationId": "Customers_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1UpdateCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Customer"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 196,
    "email_address": "Freda.Erdman@yahoo.com",
    "first_name": "Salma",
    "last_name": "Cassin",
    "order_count": 1,
    "loyalty_points": 1.0,
    "created_date": "2020-05-26T04:52:03.8348516Z",
    "modified_date": "2021-03-06T11:50:52.0529159Z",
    "last_login_date": "2020-06-02T11:05:37.9163083Z",
    "last_login_attempt_date": "2020-04-09T05:03:35.2315894Z",
    "locked": false,
    "locked_date": null,
    "locked_end_date": null,
    "is_subscribed_to_newsletter": false,
    "addresses": [
      {
        "id": 0,
        "created_date": "2020-05-08T16:36:49.2725116Z",
        "modified_date": "2021-01-07T13:00:51.6490574Z",
        "customer_id": 196,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "first_name": "Dayana",
        "last_name": "Gerhold",
        "company": "Hermiston and Sons",
        "address": "441 Haley Crest",
        "address2": "North Colten",
        "town": "Gaylordfurt",
        "county": "Borders",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "YA2 7BM",
        "telephone": "962.968.2076 x401",
        "fax": "(735) 280-7700"
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "first_name"
      ],
      "error_message": "The first_name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No Customer for that Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete a Customer",
        "operationId": "Customers_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Customer"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 197,
    "email_address": "Malcolm.Corkery@yahoo.com",
    "first_name": "Stanton",
    "last_name": "Collins",
    "order_count": 0,
    "loyalty_points": 0.0,
    "created_date": "2020-10-20T16:47:43.9679672Z",
    "modified_date": "2020-05-14T11:41:59.770057Z",
    "last_login_date": "2020-09-11T08:52:29.0362438Z",
    "last_login_attempt_date": "2020-09-11T17:47:30.021064Z",
    "locked": false,
    "locked_date": null,
    "locked_end_date": null,
    "is_subscribed_to_newsletter": true,
    "addresses": [
      {
        "id": 0,
        "created_date": "2020-12-08T03:50:36.7569602Z",
        "modified_date": "2020-07-02T14:10:49.449833Z",
        "customer_id": 197,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "first_name": "Lempi",
        "last_name": "Volkman",
        "company": "Macejkovic LLC",
        "address": "07267 Tillman Bypass",
        "address2": "Dedricfurt",
        "town": "West Maxime",
        "county": "Avon",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "IN1 3GL",
        "telephone": "1-672-330-7643 x11518",
        "fax": "1-526-620-1893"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Customer \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a paginated set of Customers",
        "operationId": "Customers_GetAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of Customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Customer"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/customers?page=1"
    },
    {
      "rel": "next",
      "href": "/customers?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 198,
      "email_address": "Rochelle44@yahoo.com",
      "first_name": "Billie",
      "last_name": "Johnston",
      "order_count": 1,
      "loyalty_points": 0.0,
      "created_date": "2021-03-31T16:49:28.1568797Z",
      "modified_date": "2020-09-03T16:44:44.4671312Z",
      "last_login_date": "2020-09-12T03:37:50.1475443Z",
      "last_login_attempt_date": "2021-04-01T22:37:38.9394974Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-08-10T21:28:25.2432628Z",
          "modified_date": "2020-12-14T11:11:23.2768177Z",
          "customer_id": 198,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Quentin",
          "last_name": "Romaguera",
          "company": "Schoen LLC",
          "address": "020 Kling Springs",
          "address2": "Timmothyton",
          "town": "Samirberg",
          "county": "Avon",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "YN7 3RM",
          "telephone": "759-498-3265 x7745",
          "fax": "1-224-335-2451 x146"
        }
      ]
    },
    {
      "id": 199,
      "email_address": "Fernando.Runolfsson@yahoo.com",
      "first_name": "Connie",
      "last_name": "Batz",
      "order_count": 0,
      "loyalty_points": 0.0,
      "created_date": "2021-01-04T20:53:46.4052076Z",
      "modified_date": "2020-09-16T08:48:55.8665804Z",
      "last_login_date": "2020-07-08T19:41:58.897883Z",
      "last_login_attempt_date": "2021-03-28T14:23:52.178389Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-10-23T18:51:32.6231518Z",
          "modified_date": "2020-11-27T15:38:46.2771252Z",
          "customer_id": 199,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Fae",
          "last_name": "Dibbert",
          "company": "Schmitt, Frami and Champlin",
          "address": "095 Mariam Bypass",
          "address2": "Cassinland",
          "town": "Port Adriel",
          "county": "Avon",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "NU1 2XM",
          "telephone": "(623) 290-8530 x768",
          "fax": "222-820-8785"
        }
      ]
    },
    {
      "id": 200,
      "email_address": "Lois29@gmail.com",
      "first_name": "Hollis",
      "last_name": "O\u0027Keefe",
      "order_count": 1,
      "loyalty_points": 1.0,
      "created_date": "2020-04-17T19:03:31.4581708Z",
      "modified_date": "2020-09-21T01:24:57.6900319Z",
      "last_login_date": "2020-04-23T12:02:59.7780012Z",
      "last_login_attempt_date": "2020-11-21T07:28:24.2655195Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-06-21T10:30:46.1022905Z",
          "modified_date": "2020-06-19T16:08:55.7141967Z",
          "customer_id": 200,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Makayla",
          "last_name": "Kihn",
          "company": "Brown Inc",
          "address": "5445 Gussie Village",
          "address2": "Aurelioburgh",
          "town": "Port Emilmouth",
          "county": "Borders",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "PA0 3JW",
          "telephone": "(656) 629-3733 x32101",
          "fax": "311.897.3625 x9765"
        }
      ]
    },
    {
      "id": 201,
      "email_address": "Willie83@gmail.com",
      "first_name": "Annamarie",
      "last_name": "Erdman",
      "order_count": 0,
      "loyalty_points": 0.0,
      "created_date": "2021-02-04T14:32:09.5669848Z",
      "modified_date": "2020-12-24T23:09:10.9965668Z",
      "last_login_date": "2021-03-29T20:38:11.2414275Z",
      "last_login_attempt_date": "2020-11-25T08:37:17.4095657Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-05-21T01:22:46.8087679Z",
          "modified_date": "2020-10-20T00:49:57.3489621Z",
          "customer_id": 201,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Muriel",
          "last_name": "Rath",
          "company": "Roob and Sons",
          "address": "23579 Dortha Bypass",
          "address2": "Borerbury",
          "town": "Luciechester",
          "county": "Cambridgeshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "LF4 3ZQ",
          "telephone": "478.757.9925 x05455",
          "fax": "1-947-447-4644"
        }
      ]
    },
    {
      "id": 202,
      "email_address": "Barry.Grant@hotmail.com",
      "first_name": "Quincy",
      "last_name": "O\u0027Kon",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-11-03T18:36:28.0260545Z",
      "modified_date": "2020-10-13T23:57:15.3993054Z",
      "last_login_date": "2020-08-03T04:24:30.810989Z",
      "last_login_attempt_date": "2020-04-17T22:30:35.3127649Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-07-09T18:57:42.9841759Z",
          "modified_date": "2020-10-12T02:11:36.1164501Z",
          "customer_id": 202,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Lela",
          "last_name": "Keeling",
          "company": "Barrows - Botsford",
          "address": "58100 Brice Squares",
          "address2": "South Odaport",
          "town": "Elfriedafurt",
          "county": "Borders",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "PJ3 1DR",
          "telephone": "(636) 848-3792 x525",
          "fax": "1-251-863-8914"
        }
      ]
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add a customer",
        "description": "Note: setting send_email to true will send an email to the customer prompting them to create a password",
        "operationId": "Customers_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1AddCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Customer"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 203,
    "email_address": "Karl_Wisozk47@hotmail.com",
    "first_name": "Giovanny",
    "last_name": "Eichmann",
    "order_count": 0,
    "loyalty_points": 1.0,
    "created_date": "2020-09-01T09:10:34.379855Z",
    "modified_date": "2020-08-22T00:06:02.0774784Z",
    "last_login_date": "2021-02-06T20:32:34.3459899Z",
    "last_login_attempt_date": "2020-06-05T21:51:28.7671759Z",
    "locked": true,
    "locked_date": null,
    "locked_end_date": null,
    "is_subscribed_to_newsletter": false,
    "addresses": [
      {
        "id": 0,
        "created_date": "2021-03-22T09:18:45.2532701Z",
        "modified_date": "2020-07-27T09:10:53.9887071Z",
        "customer_id": 203,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "first_name": "Otto",
        "last_name": "Williamson",
        "company": "Kshlerin - Metz",
        "address": "94899 Maggio Lodge",
        "address2": "Ivachester",
        "town": "Pourosshire",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "NA7 7EG",
        "telephone": "367-835-4993 x31259",
        "fax": "1-301-383-9666 x9150"
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "first_name"
      ],
      "error_message": "The first_name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/customers/search": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Searches customers based on search criteria",
        "operationId": "Customers_Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int34"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int34"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. email_address eq 'test@ekm.com'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of customers based on search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Customer"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/customers?page=1"
    },
    {
      "rel": "next",
      "href": "/customers?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 204,
      "email_address": "Donald_Leffler63@yahoo.com",
      "first_name": "Astrid",
      "last_name": "Wolf",
      "order_count": 1,
      "loyalty_points": 1.0,
      "created_date": "2020-11-18T12:24:36.678941Z",
      "modified_date": "2020-10-11T15:48:58.342504Z",
      "last_login_date": "2020-07-16T22:08:50.6248034Z",
      "last_login_attempt_date": "2020-07-11T22:31:45.1967095Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-08-30T07:55:16.4339435Z",
          "modified_date": "2020-05-26T17:27:05.5979769Z",
          "customer_id": 204,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Ubaldo",
          "last_name": "Shanahan",
          "company": "Jenkins - Kub",
          "address": "674 Lloyd Row",
          "address2": "Port Pasqualechester",
          "town": "Grimesberg",
          "county": "Berkshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "UM8 0YC",
          "telephone": "1-811-474-6850 x72440",
          "fax": "792-366-1470"
        }
      ]
    },
    {
      "id": 205,
      "email_address": "Theodore56@hotmail.com",
      "first_name": "Lexi",
      "last_name": "Hyatt",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-12-13T15:12:54.5901987Z",
      "modified_date": "2020-05-24T20:47:26.1361666Z",
      "last_login_date": "2020-06-18T08:34:28.3018629Z",
      "last_login_attempt_date": "2020-09-22T12:33:10.6047127Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-12-09T11:32:05.9531485Z",
          "modified_date": "2020-04-08T02:59:39.8963953Z",
          "customer_id": 205,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Stewart",
          "last_name": "Hand",
          "company": "Jaskolski, Pacocha and Quigley",
          "address": "23762 Kenyon Prairie",
          "address2": "Collinsmouth",
          "town": "Ewaldshire",
          "county": "Borders",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "KQ0 7GB",
          "telephone": "(614) 845-4244 x72579",
          "fax": "797.666.8757"
        }
      ]
    },
    {
      "id": 206,
      "email_address": "Rose.Kiehn@yahoo.com",
      "first_name": "Kim",
      "last_name": "Quitzon",
      "order_count": 0,
      "loyalty_points": 1.0,
      "created_date": "2020-10-11T09:57:26.6999545Z",
      "modified_date": "2021-03-10T11:37:50.5017374Z",
      "last_login_date": "2020-07-01T02:19:51.5619588Z",
      "last_login_attempt_date": "2020-06-02T00:13:55.3230381Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-04-26T23:56:57.4886514Z",
          "modified_date": "2020-10-31T00:29:19.4785745Z",
          "customer_id": 206,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Moses",
          "last_name": "Gerhold",
          "company": "McKenzie Inc",
          "address": "00877 Melvina Course",
          "address2": "Rueckerport",
          "town": "Jeromehaven",
          "county": "Cambridgeshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "JY1 3ZB",
          "telephone": "(224) 670-4276 x96994",
          "fax": "1-963-763-7482 x23416"
        }
      ]
    },
    {
      "id": 207,
      "email_address": "Wilfred87@yahoo.com",
      "first_name": "Rocio",
      "last_name": "Fay",
      "order_count": 0,
      "loyalty_points": 0.0,
      "created_date": "2020-10-19T18:25:47.3367774Z",
      "modified_date": "2020-10-16T23:01:49.1057763Z",
      "last_login_date": "2020-09-26T18:44:16.5657673Z",
      "last_login_attempt_date": "2021-02-02T12:10:29.5710907Z",
      "locked": false,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": false,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-10-05T07:38:08.2830093Z",
          "modified_date": "2020-10-16T13:43:25.6798509Z",
          "customer_id": 207,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Saige",
          "last_name": "Boyle",
          "company": "Homenick - Runolfsdottir",
          "address": "1308 Wilfredo Parks",
          "address2": "Lake Piercestad",
          "town": "Abshirefort",
          "county": "Berkshire",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "ZP4 1VH",
          "telephone": "976-578-3628 x5568",
          "fax": "209-909-2791"
        }
      ]
    },
    {
      "id": 208,
      "email_address": "Luther.Gutmann@yahoo.com",
      "first_name": "Mittie",
      "last_name": "McCullough",
      "order_count": 1,
      "loyalty_points": 1.0,
      "created_date": "2020-11-05T14:05:02.1052612Z",
      "modified_date": "2020-10-19T14:30:15.1804891Z",
      "last_login_date": "2020-07-07T02:43:28.1152963Z",
      "last_login_attempt_date": "2020-08-17T12:15:22.1807711Z",
      "locked": true,
      "locked_date": null,
      "locked_end_date": null,
      "is_subscribed_to_newsletter": true,
      "addresses": [
        {
          "id": 0,
          "created_date": "2020-06-23T20:56:23.3142681Z",
          "modified_date": "2021-02-26T21:56:34.1872337Z",
          "customer_id": 208,
          "is_preferred_billing_address": true,
          "is_preferred_shipping_address": true,
          "first_name": "Sammy",
          "last_name": "Mayert",
          "company": "Gleason Group",
          "address": "524 Heaven Locks",
          "address2": "New Gersonshire",
          "town": "South Petra",
          "county": "Borders",
          "country": "GB",
          "friendly_country": "United Kingdom",
          "post_code": "BK6 3UX",
          "telephone": "(932) 677-1728 x7003",
          "fax": "888.609.4675"
        }
      ]
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Get the current Primary Domain",
        "operationId": "Domains_GetPrimaryDomain",
        "responses": {
          "200": {
            "description": "The primary domain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1DomainName"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "primary_domain_name": "fernando.net"
  }
}
              }
            }
          },
          "404": {
            "description": "No primary domain found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Domain not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get an order by ID",
        "operationId": "Orders_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 91,
    "order_number": "h6a7r1cm9qee5875",
    "order_date": "2019-07-16T13:27:24.3809818Z",
    "is_confirmed": false,
    "sub_total": 0.7066375197407965,
    "total_delivery": 0.6918045122603906,
    "total_tax": 0.5574299998383178,
    "total_cost": 0.9063932164136289,
    "status": "DISPATCHED",
    "payment_status": "SUCCESS",
    "delivery_method": "",
    "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
    "transaction_status": "",
    "order_type": "",
    "use_shipping_address": true,
    "shipping_address": {
      "first_name": "Patty",
      "last_name": "Kunde",
      "id": -1845995561,
      "created_date": "2020-07-22T19:11:05.8367094Z",
      "modified_date": "2020-07-07T06:19:22.788704Z",
      "customer_id": 764208922,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": false,
      "company": "Ryan LLC",
      "address": "960 Kunze Fields",
      "address2": "Michaleborough",
      "town": "Lynchburgh",
      "county": "Cambridgeshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "QT7 7PW",
      "telephone": "1-676-367-6832",
      "fax": "1-490-277-5236 x09264"
    },
    "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
    "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
    "emailed": false,
    "discounts": "",
    "discounts_total": 0.0,
    "shipping_company": "UPS",
    "ip_address": "127.0.0.1",
    "guid": "47cfe23c-6de4-ac6b-7969-8c877ab4f92e",
    "last_updated": null,
    "delivery_tax_rate": null,
    "delivery_includes_tax": null,
    "custom_fields_total": null,
    "custom_fields_tax_total": null,
    "customer_details": {
      "customer_id": -1492704517,
      "email_address": "Talon12@gmail.com",
      "first_name": "Patty",
      "last_name": "Kunde",
      "company": "Keebler - Frami",
      "address": "04817 McDermott Island",
      "address2": "North Marge",
      "town": "Marciamouth",
      "county": "Berkshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "WK2 3YJ",
      "telephone": "(699) 837-7377",
      "fax": "1-935-684-4303 x96491",
      "billing_address_verified": true
    },
    "custom_fields": null,
    "delivery_tracking_number": null,
    "delivery_tracking_company": null,
    "delivery_tracking_url": null
  }
}
              }
            }
          },
          "404": {
            "description": "No Order was found for the requested ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Order \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get a paginated set of orders",
        "operationId": "Orders_GetAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV2Order"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/orders?page=1"
    },
    {
      "rel": "next",
      "href": "/orders?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 92,
      "order_number": "opjogxbx64wgs359",
      "order_date": "1974-11-05T10:55:02.6323048Z",
      "is_confirmed": false,
      "sub_total": 0.7947900573698757,
      "total_delivery": 0.822478351566232,
      "total_tax": 0.7298154024080445,
      "total_cost": 0.33179335916964026,
      "status": "PENDING",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Marcia",
        "last_name": "Hartmann",
        "id": -521191277,
        "created_date": "2021-02-06T05:26:46.9577602Z",
        "modified_date": "2020-07-18T08:08:45.4828328Z",
        "customer_id": 402753719,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": false,
        "company": "Sanford - Bergstrom",
        "address": "62808 Britney Fields",
        "address2": "Lake Percivalfort",
        "town": "Beckerborough",
        "county": "Berkshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "NV1 3TE",
        "telephone": "(986) 463-3430",
        "fax": "800.887.9993 x43380"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "d6ebee0c-e683-d1d5-969b-28f3e84cfe11",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": -1235724420,
        "email_address": "Amaya86@yahoo.com",
        "first_name": "Marcia",
        "last_name": "Hartmann",
        "company": "Emmerich - Parker",
        "address": "884 Ramona Square",
        "address2": "Everardobury",
        "town": "South Rosiestad",
        "county": "Buckinghamshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "NE0 7WP",
        "telephone": "1-821-597-1420",
        "fax": "(648) 256-6298 x90954",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 93,
      "order_number": "0ukfhkxzvkvi8jtn",
      "order_date": "2020-10-06T00:12:57.3527966Z",
      "is_confirmed": false,
      "sub_total": 0.12351121060713717,
      "total_delivery": 0.7165714882857034,
      "total_tax": 0.9862773921276803,
      "total_cost": 0.23037994756846686,
      "status": "PROCESSING",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Wilbur",
        "last_name": "Considine",
        "id": -408607969,
        "created_date": "2020-10-03T16:36:35.3395411Z",
        "modified_date": "2021-02-23T11:15:28.4261071Z",
        "customer_id": 1858901961,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "company": "Wolf LLC",
        "address": "98805 West Road",
        "address2": "Loismouth",
        "town": "Erwinborough",
        "county": "Borders",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "SO5 6ZN",
        "telephone": "456-320-9689 x7900",
        "fax": "1-332-701-9130"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "3050191b-9f6a-ef31-822d-bc885bc6bb47",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": -930310761,
        "email_address": "Jett_Batz83@hotmail.com",
        "first_name": "Wilbur",
        "last_name": "Considine",
        "company": "Sipes, Kautzer and Parisian",
        "address": "525 Kozey Hollow",
        "address2": "East Raquel",
        "town": "New Rowenaborough",
        "county": "Bedfordshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "LY7 1DM",
        "telephone": "(707) 958-3163 x371",
        "fax": "999-396-5979",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 94,
      "order_number": "j8hvzashqc7na3r6",
      "order_date": "2019-10-10T03:24:06.2906614Z",
      "is_confirmed": false,
      "sub_total": 0.8481812034026632,
      "total_delivery": 0.9510357756870965,
      "total_tax": 0.9714536084660579,
      "total_cost": 0.5236776720377047,
      "status": "DISPATCHED",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Timothy",
        "last_name": "Langworth",
        "id": -1262811997,
        "created_date": "2020-12-08T16:45:37.0001245Z",
        "modified_date": "2020-10-19T12:29:34.0934961Z",
        "customer_id": 1212341529,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": false,
        "company": "Wunsch Group",
        "address": "61663 Farrell Lakes",
        "address2": "Kerlukefurt",
        "town": "Wayneview",
        "county": "Bedfordshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "FO3 2MO",
        "telephone": "1-300-638-5652 x4609",
        "fax": "(459) 783-3915"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "fff91e59-8041-3f8f-3ea2-333c83ab3ea7",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": -1181296906,
        "email_address": "Norwood_Huels@hotmail.com",
        "first_name": "Timothy",
        "last_name": "Langworth",
        "company": "Bartell and Sons",
        "address": "304 Yost Fort",
        "address2": "New Joannybury",
        "town": "Destineeton",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "TP5 1SA",
        "telephone": "(860) 735-2497",
        "fax": "634-674-5348 x117",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 95,
      "order_number": "cul826lrektke2pj",
      "order_date": "2011-10-14T12:16:30.8045311Z",
      "is_confirmed": false,
      "sub_total": 0.7226475140650978,
      "total_delivery": 0.9109500357466517,
      "total_tax": 0.9019601554153301,
      "total_cost": 0.4585503318619683,
      "status": "PROCESSING",
      "payment_status": "SUCCESS",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Jamie",
        "last_name": "Kuhic",
        "id": 1339256957,
        "created_date": "2020-04-13T05:08:44.4323799Z",
        "modified_date": "2020-11-10T07:51:16.995393Z",
        "customer_id": -1581745712,
        "is_preferred_billing_address": false,
        "is_preferred_shipping_address": true,
        "company": "Gaylord and Sons",
        "address": "1421 Carolyne Isle",
        "address2": "Lamontton",
        "town": "Greenholtborough",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "DR5 4XQ",
        "telephone": "925.293.6989 x8785",
        "fax": "(453) 473-3728 x433"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "4d919eb4-ce44-321e-6cc1-3163407ecb77",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 1688768888,
        "email_address": "Wilma46@yahoo.com",
        "first_name": "Jamie",
        "last_name": "Kuhic",
        "company": "Doyle and Sons",
        "address": "75873 Marc Throughway",
        "address2": "Rasheedburgh",
        "town": "Lake Kelsie",
        "county": "Borders",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "VW8 2CA",
        "telephone": "1-871-609-3066",
        "fax": "1-844-852-7375 x54155",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 96,
      "order_number": "ywsobn3wyi2craki",
      "order_date": "2002-12-18T20:21:40.6376745Z",
      "is_confirmed": true,
      "sub_total": 0.7811123019927704,
      "total_delivery": 0.27904896404549895,
      "total_tax": 0.2578799926014058,
      "total_cost": 0.7298345490032037,
      "status": "PROCESSING",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Jared",
        "last_name": "Bashirian",
        "id": 548277623,
        "created_date": "2020-07-12T21:50:59.6932092Z",
        "modified_date": "2020-08-24T02:00:43.7859941Z",
        "customer_id": 550469484,
        "is_preferred_billing_address": false,
        "is_preferred_shipping_address": true,
        "company": "Marquardt Inc",
        "address": "89448 Harvey Gateway",
        "address2": "Grimeshaven",
        "town": "East Tyrellborough",
        "county": "Borders",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "FD4 6YA",
        "telephone": "265-299-6961",
        "fax": "551-796-8461 x55338"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "709cae20-bcb6-2a08-c58d-3f3c05c3dbbf",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 355554936,
        "email_address": "Rowena_Schmitt@hotmail.com",
        "first_name": "Jared",
        "last_name": "Bashirian",
        "company": "Wisozk Inc",
        "address": "255 Hannah Plains",
        "address2": "Stoltenbergburgh",
        "town": "Baileyview",
        "county": "Bedfordshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "OI6 6EF",
        "telephone": "1-793-471-9524 x519",
        "fax": "(682) 463-8383 x8939",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/{id}/status": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates the status of an order",
        "operationId": "Orders_UpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The updated order status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1OrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 97,
    "order_number": "82ny3mx6znoz2oln",
    "order_date": "2012-07-14T03:47:51.7509424Z",
    "is_confirmed": false,
    "sub_total": 0.2072617119211991,
    "total_delivery": 0.9523662933857955,
    "total_tax": 0.09263517944730594,
    "total_cost": 0.5465399266903009,
    "status": "DECLINED",
    "payment_status": "SUCCESS",
    "delivery_method": "",
    "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
    "transaction_status": "",
    "order_type": "",
    "use_shipping_address": true,
    "shipping_address": {
      "first_name": "Josephine",
      "last_name": "Becker",
      "id": 323596788,
      "created_date": "2020-10-07T20:58:58.890625Z",
      "modified_date": "2020-04-07T20:55:19.4060398Z",
      "customer_id": 1421545779,
      "is_preferred_billing_address": true,
      "is_preferred_shipping_address": false,
      "company": "Hamill LLC",
      "address": "86701 Kuhic Point",
      "address2": "Brakusmouth",
      "town": "Volkmanmouth",
      "county": "Borders",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "VF6 4AG",
      "telephone": "1-831-833-3868 x158",
      "fax": "1-738-614-6991"
    },
    "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
    "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
    "emailed": false,
    "discounts": "",
    "discounts_total": 0.0,
    "shipping_company": "UPS",
    "ip_address": "127.0.0.1",
    "guid": "27eaea48-40a9-6f71-8dba-a488542b3d20",
    "last_updated": null,
    "delivery_tax_rate": null,
    "delivery_includes_tax": null,
    "custom_fields_total": null,
    "custom_fields_tax_total": null,
    "customer_details": {
      "customer_id": -1839854786,
      "email_address": "Fredrick.Gislason34@gmail.com",
      "first_name": "Josephine",
      "last_name": "Becker",
      "company": "Leannon, Koss and Ratke",
      "address": "1574 Lueilwitz Meadow",
      "address2": "Port Nadia",
      "town": "Blockborough",
      "county": "Buckinghamshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "ZO7 5PH",
      "telephone": "1-988-470-9300 x3435",
      "fax": "560.210.7159 x350",
      "billing_address_verified": false
    },
    "custom_fields": null,
    "delivery_tracking_number": null,
    "delivery_tracking_company": null,
    "delivery_tracking_url": null
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "status"
      ],
      "error_message": "The status field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/search": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Searches orders based on search criteria",
        "operationId": "Orders_Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. status eq 'PENDING'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV2Order"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/orders?page=1"
    },
    {
      "rel": "next",
      "href": "/orders?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 98,
      "order_number": "67c5euuv3mr1kkak",
      "order_date": "2019-12-30T21:52:05.190129Z",
      "is_confirmed": false,
      "sub_total": 0.35586914157302546,
      "total_delivery": 0.2065608995997165,
      "total_tax": 0.06458803269294465,
      "total_cost": 0.38120589143652744,
      "status": "COMPLETE",
      "payment_status": "SUCCESS",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Zachary",
        "last_name": "Nolan",
        "id": -1648034945,
        "created_date": "2020-07-28T05:55:45.8821877Z",
        "modified_date": "2020-06-13T17:56:50.5029004Z",
        "customer_id": 448947794,
        "is_preferred_billing_address": false,
        "is_preferred_shipping_address": true,
        "company": "Turcotte Inc",
        "address": "9677 Lora Creek",
        "address2": "Conorside",
        "town": "Charlotteland",
        "county": "Bedfordshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "XX0 1JH",
        "telephone": "1-851-527-9489",
        "fax": "(730) 559-1503"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "8210e004-7785-0342-80ff-092962923fc1",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": -1366120550,
        "email_address": "Reagan.Bergstrom@gmail.com",
        "first_name": "Zachary",
        "last_name": "Nolan",
        "company": "Will LLC",
        "address": "5122 Konopelski Street",
        "address2": "North Thaddeus",
        "town": "New Goldamouth",
        "county": "Buckinghamshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "OY4 3CI",
        "telephone": "1-596-816-9880",
        "fax": "(727) 449-0659 x1198",
        "billing_address_verified": false
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 99,
      "order_number": "pyrknr4xklxw5a8k",
      "order_date": "1974-10-24T20:47:26.2269347Z",
      "is_confirmed": false,
      "sub_total": 0.9331242344030758,
      "total_delivery": 0.7723599629347957,
      "total_tax": 0.6054775498832937,
      "total_cost": 0.831940536309006,
      "status": "PROCESSING",
      "payment_status": "SUCCESS",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Alexis",
        "last_name": "Lemke",
        "id": 827821074,
        "created_date": "2020-10-28T17:12:47.6606306Z",
        "modified_date": "2020-05-18T01:08:03.7114731Z",
        "customer_id": -842495623,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": true,
        "company": "Doyle, Aufderhar and Ferry",
        "address": "107 Cummerata Spurs",
        "address2": "Ginachester",
        "town": "Gulgowskiland",
        "county": "Buckinghamshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "CA6 5PJ",
        "telephone": "(738) 658-4544 x2260",
        "fax": "664-758-0092 x012"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "85d2eb62-eff6-305f-a2c8-4a2de9d25261",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 132163333,
        "email_address": "Roosevelt_Keeling@gmail.com",
        "first_name": "Alexis",
        "last_name": "Lemke",
        "company": "Lesch, Hermiston and Abernathy",
        "address": "14765 Botsford Course",
        "address2": "North Stacyberg",
        "town": "Veumview",
        "county": "Borders",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "IL4 4SR",
        "telephone": "(783) 907-1483",
        "fax": "348-213-2755 x70219",
        "billing_address_verified": true
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 100,
      "order_number": "pu2b28sp1zhdhgpp",
      "order_date": "1999-12-04T18:42:15.3620613Z",
      "is_confirmed": false,
      "sub_total": 0.35009084052876144,
      "total_delivery": 0.7385571998257922,
      "total_tax": 0.9168526311017818,
      "total_cost": 0.32133192258017695,
      "status": "PROCESSING",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Sonia",
        "last_name": "Ward",
        "id": 280055575,
        "created_date": "2020-11-19T09:49:40.5398785Z",
        "modified_date": "2020-06-03T02:34:16.1624654Z",
        "customer_id": 2028186575,
        "is_preferred_billing_address": false,
        "is_preferred_shipping_address": false,
        "company": "Littel Inc",
        "address": "74890 Price Park",
        "address2": "Ortizborough",
        "town": "South Jena",
        "county": "Buckinghamshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "YI7 5HN",
        "telephone": "1-455-329-6153 x683",
        "fax": "1-563-497-6457"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "9f894051-0531-e310-b45d-bb643b119a92",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 963132464,
        "email_address": "Chanelle.McCullough@hotmail.com",
        "first_name": "Sonia",
        "last_name": "Ward",
        "company": "Kiehn LLC",
        "address": "36778 Barton Ford",
        "address2": "Weimannberg",
        "town": "Kristinport",
        "county": "Buckinghamshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "DO4 1WA",
        "telephone": "1-591-231-5223",
        "fax": "656.735.0776 x9193",
        "billing_address_verified": true
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 101,
      "order_number": "5mdzuntmz858bu8j",
      "order_date": "1981-02-17T11:33:03.1896588Z",
      "is_confirmed": false,
      "sub_total": 0.23798606183286108,
      "total_delivery": 0.32257100209713496,
      "total_tax": 0.6350307164876865,
      "total_cost": 0.11623799573454913,
      "status": "DECLINED",
      "payment_status": "SUCCESS",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Patricia",
        "last_name": "Torp",
        "id": 56129871,
        "created_date": "2021-03-26T23:28:55.7243192Z",
        "modified_date": "2020-10-21T00:43:49.7232314Z",
        "customer_id": 222205557,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": false,
        "company": "Carroll, Kulas and Willms",
        "address": "6694 Lorena Lake",
        "address2": "West Dashawn",
        "town": "Peterhaven",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "YK8 3CG",
        "telephone": "1-870-649-3278 x053",
        "fax": "887.238.3095"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "411066d3-51ea-a2c4-7c0e-c2c1f6e3f5e1",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 159165153,
        "email_address": "Antonetta_Mann@gmail.com",
        "first_name": "Patricia",
        "last_name": "Torp",
        "company": "Marks Inc",
        "address": "8823 Ilene Lodge",
        "address2": "Raoulport",
        "town": "Webershire",
        "county": "Cambridgeshire",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "TM1 3KZ",
        "telephone": "453.228.9967 x68645",
        "fax": "1-616-334-1501",
        "billing_address_verified": true
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    },
    {
      "id": 102,
      "order_number": "hie3vu7ip5d73dre",
      "order_date": "1970-04-13T14:08:36.0928876Z",
      "is_confirmed": true,
      "sub_total": 0.31540994733358263,
      "total_delivery": 0.01217768202171553,
      "total_tax": 0.47581202046750676,
      "total_cost": 0.0678862273077882,
      "status": "DECLINED",
      "payment_status": "UNKNOWN",
      "delivery_method": "",
      "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
      "transaction_status": "",
      "order_type": "",
      "use_shipping_address": true,
      "shipping_address": {
        "first_name": "Margie",
        "last_name": "Wisoky",
        "id": 1150493622,
        "created_date": "2020-05-20T11:49:04.8018748Z",
        "modified_date": "2020-10-07T05:05:55.6649132Z",
        "customer_id": -359196182,
        "is_preferred_billing_address": true,
        "is_preferred_shipping_address": false,
        "company": "Langworth Group",
        "address": "59351 Nikolaus Circle",
        "address2": "Ziemefurt",
        "town": "Gutkowskiland",
        "county": "Avon",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "OI8 4ID",
        "telephone": "388-980-3312",
        "fax": "(883) 679-5150 x4582"
      },
      "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
      "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
      "emailed": false,
      "discounts": "",
      "discounts_total": 0.0,
      "shipping_company": "UPS",
      "ip_address": "127.0.0.1",
      "guid": "73c9aa99-2721-bc73-4704-c2b8704c2ffb",
      "last_updated": null,
      "delivery_tax_rate": null,
      "delivery_includes_tax": null,
      "custom_fields_total": null,
      "custom_fields_tax_total": null,
      "customer_details": {
        "customer_id": 1159121760,
        "email_address": "Trever57@hotmail.com",
        "first_name": "Margie",
        "last_name": "Wisoky",
        "company": "McLaughlin - Fisher",
        "address": "3895 Reginald Station",
        "address2": "Calistahaven",
        "town": "South Darron",
        "county": "Avon",
        "country": "GB",
        "friendly_country": "United Kingdom",
        "post_code": "TL1 3GB",
        "telephone": "(899) 669-7671 x3452",
        "fax": "930-416-0270",
        "billing_address_verified": true
      },
      "custom_fields": null,
      "delivery_tracking_number": null,
      "delivery_tracking_company": null,
      "delivery_tracking_url": null
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/{id}/items": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get an order's items",
        "operationId": "Orders_GetItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order's ID'",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order's ID'",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested order items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV2OrderItem"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/orders?page=1"
    },
    {
      "rel": "next",
      "href": "/orders?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 0,
      "item_delivery": 1.9,
      "item_discount": 3.06,
      "item_id": 0,
      "item_name": "ipsa",
      "item_options": null,
      "item_order_note": null,
      "item_price": 4.28,
      "item_tax": 2.56,
      "item_tax_id": 28,
      "item_tax_rate": 2.82,
      "order_number": null,
      "quantity": 63,
      "product_id": 1752,
      "order_id": 7978,
      "product_code": "XYZ321"
    },
    {
      "id": 0,
      "item_delivery": 0.27,
      "item_discount": 3.74,
      "item_id": 0,
      "item_name": "illum",
      "item_options": null,
      "item_order_note": null,
      "item_price": 1.95,
      "item_tax": 1.4,
      "item_tax_id": 286,
      "item_tax_rate": 2.2,
      "order_number": null,
      "quantity": 74,
      "product_id": 2125,
      "order_id": 2936,
      "product_code": "QWE456"
    },
    {
      "id": 0,
      "item_delivery": 2.74,
      "item_discount": 0.7,
      "item_id": 0,
      "item_name": "quo",
      "item_options": null,
      "item_order_note": null,
      "item_price": 4.7,
      "item_tax": 0.34,
      "item_tax_id": 591,
      "item_tax_rate": 3.89,
      "order_number": null,
      "quantity": 60,
      "product_id": 5962,
      "order_id": 617,
      "product_code": "QWE456"
    },
    {
      "id": 0,
      "item_delivery": 4.72,
      "item_discount": 1.19,
      "item_id": 0,
      "item_name": "et",
      "item_options": null,
      "item_order_note": null,
      "item_price": 2.22,
      "item_tax": 1.83,
      "item_tax_id": 284,
      "item_tax_rate": 4.98,
      "order_number": null,
      "quantity": 98,
      "product_id": 8521,
      "order_id": 1163,
      "product_code": "JKT657"
    },
    {
      "id": 0,
      "item_delivery": 2.23,
      "item_discount": 4.71,
      "item_id": 0,
      "item_name": "eos",
      "item_options": null,
      "item_order_note": null,
      "item_price": 4.89,
      "item_tax": 1.34,
      "item_tax_id": 513,
      "item_tax_rate": 4.42,
      "order_number": null,
      "quantity": 16,
      "product_id": 6682,
      "order_id": 8905,
      "product_code": "POP4552"
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "The requested order was not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/{id}/items/{itemId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get a specific item from an order",
        "operationId": "Orders_GetOrderItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order's ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order's ID",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The order item's ID'",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order item's ID'",
              "format": "int64"
            }
          },
          {
            "name": "item_id",
            "in": "query",
            "description": "The order item ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested order item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2OrderItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "item_delivery": 3.91,
    "item_discount": 0.33,
    "item_id": 0,
    "item_name": "qui",
    "item_options": null,
    "item_order_note": null,
    "item_price": 3.58,
    "item_tax": 2.85,
    "item_tax_id": 959,
    "item_tax_rate": 4.86,
    "order_number": null,
    "quantity": 57,
    "product_id": 4800,
    "order_id": 194,
    "product_code": "POP4552"
  }
}
              }
            }
          },
          "404": {
            "description": "Either the requested order or order item was not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v2/orders/{id}/deliveryTracking": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates delivery tracking info for an order",
        "operationId": "Orders_UpdateDeliveryTracking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The order ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The delivery tracking info for an order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1OrderDeliveryTracking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 103,
    "order_number": "h7s5ux5amurovoz3",
    "order_date": "2015-09-03T01:54:43.0827584Z",
    "is_confirmed": true,
    "sub_total": 0.6998282781335657,
    "total_delivery": 0.6875739701500041,
    "total_tax": 0.8579309228146127,
    "total_cost": 0.4281220433433177,
    "status": "DECLINED",
    "payment_status": "SUCCESS",
    "delivery_method": "",
    "transaction_id": "e4842d47-25a6-4dd3-98b4-51fffb2b1ffc",
    "transaction_status": "",
    "order_type": "",
    "use_shipping_address": true,
    "shipping_address": {
      "first_name": "Charlotte",
      "last_name": "Von",
      "id": -312674960,
      "created_date": "2020-09-27T12:14:17.4140462Z",
      "modified_date": "2020-06-07T17:23:16.3060171Z",
      "customer_id": -1519389465,
      "is_preferred_billing_address": false,
      "is_preferred_shipping_address": true,
      "company": "Stehr, Feil and McCullough",
      "address": "0193 Lyric Road",
      "address2": "East Vanessa",
      "town": "North Marianeshire",
      "county": "Buckinghamshire",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "LX5 8EN",
      "telephone": "1-724-524-8426",
      "fax": "286.673.7767"
    },
    "internal_notes": "This is an internal order note.\n\nThis is another internal order note.",
    "customer_facing_notes": "This is an order note.\n\nThis is another order note.",
    "emailed": false,
    "discounts": "",
    "discounts_total": 0.0,
    "shipping_company": "UPS",
    "ip_address": "127.0.0.1",
    "guid": "320dc39e-3970-428b-8b97-c3f9d12f9688",
    "last_updated": null,
    "delivery_tax_rate": null,
    "delivery_includes_tax": null,
    "custom_fields_total": null,
    "custom_fields_tax_total": null,
    "customer_details": {
      "customer_id": -1344620310,
      "email_address": "Desiree.Simonis47@gmail.com",
      "first_name": "Charlotte",
      "last_name": "Von",
      "company": "Walter, Nienow and Nicolas",
      "address": "86761 Stokes Brook",
      "address2": "Carliemouth",
      "town": "Oberbrunnerburgh",
      "county": "Avon",
      "country": "GB",
      "friendly_country": "United Kingdom",
      "post_code": "UY1 5RF",
      "telephone": "1-423-375-6832",
      "fax": "(716) 220-4834 x2180",
      "billing_address_verified": true
    },
    "custom_fields": null,
    "delivery_tracking_number": null,
    "delivery_tracking_company": null,
    "delivery_tracking_url": null
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV2Order"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "status"
      ],
      "error_message": "The status field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/orderstatuses": {
      "get": {
        "tags": [
          "OrderStatuses"
        ],
        "summary": "Get the current Order Statuses",
        "operationId": "OrderStatuses_GetOrderStatuses",
        "responses": {
          "200": {
            "description": "The order statuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1OrderStatuses"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "statuses": [
      {
        "name": "Pending",
        "colour": "#FFFF00",
        "show_in_quick_stats": true
      },
      {
        "name": "Processing",
        "colour": "#FF00FF",
        "show_in_quick_stats": true
      },
      {
        "name": "Dispatched",
        "colour": "#FF00FF",
        "show_in_quick_stats": true
      },
      {
        "name": "Complete",
        "colour": "#000099",
        "show_in_quick_stats": true
      },
      {
        "name": "Failed",
        "colour": "#00FF00",
        "show_in_quick_stats": true
      },
      {
        "name": "Declined",
        "colour": "#FF0000",
        "show_in_quick_stats": true
      },
      {
        "name": "Refunded",
        "colour": "#FFFF00",
        "show_in_quick_stats": true
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "No order statuses found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/plans": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get all plans",
        "operationId": "Plans_GetAll",
        "responses": {
          "200": {
            "description": "The plans",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListPlan"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": "1",
      "order": 100,
      "friendly_name": "Basic",
      "description": "All ecommerce features and an Account Manager to help you get set up and ready for success.",
      "restrictions": [
        {
          "id": "Basic500ProductLimit",
          "error_message": "Merchants on the Basic plan can have no more than 500 products.",
          "upgrade_plan_id": "2"
        }
      ]
    },
    {
      "id": "2",
      "order": 200,
      "friendly_name": "Standard",
      "description": "All ecommerce features, priority support, and an Account Manager dedicated to helping you grow your business.",
      "restrictions": []
    },
    {
      "id": "3",
      "order": 300,
      "friendly_name": "Advanced",
      "description": "All ecommerce features \u0026 24/7 emergency support. An Ecommerce Consultant to help your established business reach its full potential.",
      "restrictions": []
    },
    {
      "id": "4",
      "order": 400,
      "friendly_name": "Pro",
      "description": "All ecommerce features \u0026 24/7 emergency support. An Ecommerce Consultant to help your established business reach its full potential.",
      "restrictions": []
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Plan not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/plans/current": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get the current users plan",
        "operationId": "Plans_GetCurrent",
        "responses": {
          "200": {
            "description": "The plans",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponsePlan"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": "1",
    "order": 100,
    "friendly_name": "Basic",
    "description": "All ecommerce features and an Account Manager to help you get set up and ready for success.",
    "restrictions": [
      {
        "id": "Basic500ProductLimit",
        "error_message": "Merchants on the Basic plan can have no more than 500 products.",
        "upgrade_plan_id": "2"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Plan not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/plans/{id}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get a plan by id",
        "operationId": "Plans_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The plans",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponsePlan"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": "1",
    "order": 100,
    "friendly_name": "Basic",
    "description": "All ecommerce features and an Account Manager to help you get set up and ready for success.",
    "restrictions": [
      {
        "id": "Basic500ProductLimit",
        "error_message": "Merchants on the Basic plan can have no more than 500 products.",
        "upgrade_plan_id": "2"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Plan not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/attributes": {
      "post": {
        "tags": [
          "ProductAttributeItems"
        ],
        "summary": "Add a attribute item to a product",
        "operationId": "ProductAttributeItems_Create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The product attribute item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductAttributeItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added attribute item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "attribute_key": "GTIN",
    "product_id": 1,
    "attribute_value": "123456",
    "visible": true,
    "ebay_attribute_name": "",
    "order_location": 1000
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or attribute found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "get": {
        "tags": [
          "ProductAttributeItems"
        ],
        "summary": "Get all of a products attribute items",
        "operationId": "ProductAttributeItems_GetAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The products attribute items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 1,
      "attribute_key": "GTIN",
      "product_id": 1,
      "attribute_value": "123456",
      "visible": true,
      "ebay_attribute_name": "",
      "order_location": 1000
    },
    {
      "id": 2,
      "attribute_key": "FINISH",
      "product_id": 1,
      "attribute_value": "Red",
      "visible": true,
      "ebay_attribute_name": "",
      "order_location": 2000
    },
    {
      "id": 3,
      "attribute_key": "MPN",
      "product_id": 1,
      "attribute_value": "1346715y151y53135y",
      "visible": true,
      "ebay_attribute_name": "",
      "order_location": 3000
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/attributes/{attribute_key}": {
      "put": {
        "tags": [
          "ProductAttributeItems"
        ],
        "summary": "Update a product attribute item",
        "operationId": "ProductAttributeItems_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "attribute_key",
            "in": "path",
            "description": "The attribute ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The attribute ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The product attribute item to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductAttributeItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated option item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "attribute_key": "GTIN",
    "product_id": 1,
    "attribute_value": "123456",
    "visible": true,
    "ebay_attribute_name": "",
    "order_location": 1000
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product, option or item for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "get": {
        "tags": [
          "ProductAttributeItems"
        ],
        "summary": "Get a product attribute item",
        "operationId": "ProductAttributeItems_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "attribute_key",
            "in": "path",
            "description": "The attribute item key",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The attribute item key",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The attribute item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttributeItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "attribute_key": "GTIN",
    "product_id": 1,
    "attribute_value": "123456",
    "visible": true,
    "ebay_attribute_name": "",
    "order_location": 1000
  }
}
              }
            }
          },
          "404": {
            "description": "No attribute item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/productattributes": {
      "post": {
        "tags": [
          "ProductAttributes"
        ],
        "summary": "Add a product attribute",
        "operationId": "ProductAttributes_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductAttribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added product attribute",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "attribute_key": "GTIN",
    "visible_name": "GTIN",
    "system_attribute": true
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "get": {
        "tags": [
          "ProductAttributes"
        ],
        "summary": "Get all product attributes",
        "operationId": "ProductAttributes_GetAll",
        "responses": {
          "200": {
            "description": "The products attribute items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "attribute_key": "GTIN",
      "visible_name": "GTIN",
      "system_attribute": true
    },
    {
      "attribute_key": "ISBNNUMBER",
      "visible_name": "Isbn Number",
      "system_attribute": true
    },
    {
      "attribute_key": "IDENTIFIEREXISTS",
      "visible_name": "IDENTIFIER EXISTS",
      "system_attribute": false
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/productattributes/{attribute_key}": {
      "put": {
        "tags": [
          "ProductAttributes"
        ],
        "summary": "Update a product attribute",
        "operationId": "ProductAttributes_Update",
        "parameters": [
          {
            "name": "attribute_key",
            "in": "path",
            "description": "The attribute ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The attribute ID",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The product attribute item to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductAttribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated option item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "attribute_key": "GTIN",
    "visible_name": "GTIN",
    "system_attribute": true
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product, option or item for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "ProductAttributes"
        ],
        "summary": "Delete a product attribute",
        "operationId": "ProductAttributes_Delete",
        "parameters": [
          {
            "name": "attribute_key",
            "in": "path",
            "description": "The attribute ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The attribute ID",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attribute item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No attribute item for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "get": {
        "tags": [
          "ProductAttributes"
        ],
        "summary": "Get a product attribute",
        "operationId": "ProductAttributes_Get",
        "parameters": [
          {
            "name": "attribute_key",
            "in": "path",
            "description": "The attribute item key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The attribute item key",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The attribute item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductAttribute"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "attribute_key": "GTIN",
    "visible_name": "GTIN",
    "system_attribute": true
  }
}
              }
            }
          },
          "404": {
            "description": "No attribute item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/options/{optionId}/items": {
      "post": {
        "tags": [
          "ProductOptionItems"
        ],
        "summary": "Add an item to a product option",
        "operationId": "ProductOptionItems_Create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductOptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added option item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOptionItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "product_id": 1,
    "name": "Gift Wrapping",
    "is_required": false,
    "type": "DROPDOWN",
    "size": 0,
    "option_items": [
      {
        "id": 1,
        "product_option_id": 1,
        "name": "Please select...",
        "price": 0.0,
        "is_placeholder": true
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "No",
        "price": 0.0,
        "is_placeholder": false
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "Yes",
        "price": 2.5,
        "is_placeholder": false
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOptionItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or option found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/options/{optionId}/items/{optionItemId}": {
      "put": {
        "tags": [
          "ProductOptionItems"
        ],
        "summary": "Update a product option item",
        "operationId": "ProductOptionItems_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          },
          {
            "name": "optionItemId",
            "in": "path",
            "description": "The option item ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option item ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductOptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated option item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOptionItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 0,
    "product_option_id": 1,
    "name": "No",
    "price": 0.0,
    "is_placeholder": false
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOptionItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product, option or item for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "ProductOptionItems"
        ],
        "summary": "Delete an option item",
        "operationId": "ProductOptionItems_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          },
          {
            "name": "optionItemId",
            "in": "path",
            "description": "The option item ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option item ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Option item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOptionItem"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product, option or item for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/options": {
      "get": {
        "tags": [
          "ProductOptions"
        ],
        "summary": "Get a products options",
        "operationId": "ProductOptions_GetAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The products options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 1,
      "product_id": 1,
      "name": "Gift Wrapping",
      "is_required": false,
      "type": "DROPDOWN",
      "size": 0,
      "option_items": [
        {
          "id": 1,
          "product_option_id": 1,
          "name": "Please select...",
          "price": 0.0,
          "is_placeholder": true
        },
        {
          "id": 0,
          "product_option_id": 1,
          "name": "No",
          "price": 0.0,
          "is_placeholder": false
        },
        {
          "id": 0,
          "product_option_id": 1,
          "name": "Yes",
          "price": 2.5,
          "is_placeholder": false
        }
      ]
    },
    {
      "id": 2,
      "product_id": 1,
      "name": "Image Option",
      "is_required": true,
      "type": "IMAGE",
      "size": 200,
      "option_items": null
    },
    {
      "id": 2,
      "product_id": 1,
      "name": "Text Option",
      "is_required": true,
      "type": "TEXT",
      "size": 200,
      "option_items": null
    },
    {
      "id": 2,
      "product_id": 1,
      "name": "Text Area Option",
      "is_required": true,
      "type": "TEXTAREA",
      "size": 5,
      "option_items": null
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "ProductOptions"
        ],
        "summary": "Add an option to a product",
        "description": "Option items must be added separately",
        "operationId": "ProductOptions_Create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1AddProductOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added option",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "product_id": 1,
    "name": "Gift Wrapping",
    "is_required": false,
    "type": "DROPDOWN",
    "size": 0,
    "option_items": [
      {
        "id": 1,
        "product_option_id": 1,
        "name": "Please select...",
        "price": 0.0,
        "is_placeholder": true
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "No",
        "price": 0.0,
        "is_placeholder": false
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "Yes",
        "price": 2.5,
        "is_placeholder": false
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/options/{optionId}": {
      "get": {
        "tags": [
          "ProductOptions"
        ],
        "summary": "Get a product option",
        "operationId": "ProductOptions_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The option",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "product_id": 1,
    "name": "Gift Wrapping",
    "is_required": false,
    "type": "DROPDOWN",
    "size": 0,
    "option_items": [
      {
        "id": 1,
        "product_option_id": 1,
        "name": "Please select...",
        "price": 0.0,
        "is_placeholder": true
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "No",
        "price": 0.0,
        "is_placeholder": false
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "Yes",
        "price": 2.5,
        "is_placeholder": false
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "No option found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "ProductOptions"
        ],
        "summary": "Update a product option",
        "description": "Option items must be updated separately",
        "operationId": "ProductOptions_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1UpdateProductOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated option",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "product_id": 1,
    "name": "Gift Wrapping",
    "is_required": false,
    "type": "DROPDOWN",
    "size": 0,
    "option_items": [
      {
        "id": 1,
        "product_option_id": 1,
        "name": "Please select...",
        "price": 0.0,
        "is_placeholder": true
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "No",
        "price": 0.0,
        "is_placeholder": false
      },
      {
        "id": 0,
        "product_option_id": 1,
        "name": "Yes",
        "price": 2.5,
        "is_placeholder": false
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or option for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "ProductOptions"
        ],
        "summary": "Delete an option",
        "operationId": "ProductOptions_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "The option ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The option ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Option deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductOption"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or option for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product",
        "description": "The SEOFriendlyUrl property can be combined with the primary shop domain to get the shop page url for a Product in the format:\r\n{primary_domain}/{SEOFriendlyUrl}",
        "operationId": "Products_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The chosen product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 732,
    "category_id": 1456811173,
    "name": "EKM - 733",
    "description": "Quasi rerum non aperiam provident cupiditate velit. Repudiandae velit explicabo omnis. Aut quis maiores ut possimus.\n\nNesciunt alias minima aut repellat culpa molestias consectetur. Incidunt soluta rem id ipsum. Sit ut corporis blanditiis non qui deserunt fugiat ut. Impedit earum est voluptas. Itaque nesciunt dolores reprehenderit et quasi commodi ut eaque.\n\nEius debitis soluta. Dolorum quia dolorem tenetur amet dicta animi corporis. Eius error dolorem non qui quis. Vero aliquid excepturi exercitationem occaecati aut non quod. Qui nam voluptatem et velit incidunt porro sequi et. Provident est optio et minus laboriosam at.",
    "short_description": "Eos delectus ea dolores quasi deserunt. Libero omnis et dolorem fugit suscipit maiores. Et et placeat omnis suscipit atque veniam blanditiis. Aut quo repudiandae eos.",
    "number_in_stock": 18,
    "price": 50.55,
    "rrp": -1573782778.0,
    "product_code": "1xd6ew2n",
    "charge_delivery": false,
    "special_offer": true,
    "brand": "Lesch - Will",
    "condition": "Used",
    "gtin": "iljtoiie",
    "mpn": "htcz0pg3",
    "product_weight": 87.0326500167291,
    "can_be_added_to_cart": true,
    "tax_applicable": true,
    "tax_rate_id": 434,
    "live": false,
    "order_note": "Sequi accusamus consequatur iure non. Sapiente molestiae ipsum commodi quam suscipit et ut. Pariatur perferendis enim aut possimus et neque optio dolor a. Repudiandae eaque accusamus debitis iure nesciunt sint amet. Commodi aliquid voluptas.",
    "redirect_url": "http://weldon.name",
    "last_modified": "2021-04-04T18:59:23.8415748Z",
    "meta_description": "Quis enim alias illo eum sit voluptatem. Quia qui asperiores qui asperiores ipsum qui et perspiciatis minus. Natus exercitationem reiciendis quaerat illum laborum consectetur fuga dolores dolore. Dolores amet sint quidem velit totam tenetur laborum dicta vero.",
    "meta_keywords": "pariatur maiores ut",
    "meta_title": "Cupiditate id ab adipisci voluptas sit vero labore facilis.",
    "total_product_stock": 91,
    "parent_product_id": 0,
    "options": [
      {
        "id": 244,
        "product_id": 734,
        "name": "Gift Wrapping",
        "is_required": false,
        "type": "DROPDOWN",
        "size": 0,
        "option_items": [
          {
            "id": 488,
            "product_option_id": 244,
            "name": "No",
            "price": 0.0,
            "is_placeholder": false
          },
          {
            "id": 489,
            "product_option_id": 244,
            "name": "Yes",
            "price": 1.56,
            "is_placeholder": false
          }
        ]
      }
    ],
    "variants": [
      {
        "id": 244,
        "parent_product_id": 0,
        "product_code": null,
        "rrp": 0.0,
        "is_default_variant": false,
        "number_in_stock": 0,
        "price": 0.0,
        "condition": null,
        "gtin": null,
        "mpn": null,
        "live": true,
        "variant_combinations": [
          {
            "variant_name": "Variant1",
            "variant_choice": "temporibus"
          },
          {
            "variant_name": "Variant2",
            "variant_choice": "incidunt"
          }
        ]
      }
    ],
    "categories": null,
    "attribute_items": null,
    "order_location": 0,
    "seo_friendly_url": "ekm---733-732-p.asp"
  }
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a Product",
        "description": "Options and variants must be updated separately",
        "operationId": "Products_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1UpdateProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 735,
    "category_id": 108820756,
    "name": "EKM - 736",
    "description": "Porro omnis velit est eum ut distinctio asperiores. Quasi ducimus asperiores vitae veritatis quia corporis. Et atque dolores et officiis est hic neque provident laborum. Dolores blanditiis id quod est hic eos neque reprehenderit aut. Tenetur earum natus voluptatem quos ab eos impedit.\n\nEt ullam omnis. Neque fugiat nulla sequi magnam laborum. Ex omnis eos sed totam impedit eius dolores molestiae. Voluptates neque a provident iste nemo omnis fugit ut voluptatem. Rerum quo quasi sequi illo ut laborum sed exercitationem.\n\nConsectetur voluptas mollitia neque. Sed voluptatem nisi et sunt quod sunt nesciunt. Deserunt earum est non.",
    "short_description": "Laboriosam ab quas quisquam aut. Iusto est at molestiae deserunt in beatae et. Omnis saepe error dolores magni autem qui. Consequatur voluptatem sed tenetur.",
    "number_in_stock": 4,
    "price": 41.2,
    "rrp": 945647694.0,
    "product_code": "kin79sxc",
    "charge_delivery": true,
    "special_offer": false,
    "brand": "Johnson Group",
    "condition": "New",
    "gtin": "r4hxn2pb",
    "mpn": "phav5fqw",
    "product_weight": 35.49982069921672,
    "can_be_added_to_cart": false,
    "tax_applicable": false,
    "tax_rate_id": 25,
    "live": true,
    "order_note": "Sapiente esse odio est sit harum hic voluptas ut. Recusandae reprehenderit est. Sunt natus aut magnam sed. Voluptates perferendis praesentium voluptas consequatur officia alias ut. Id illum sit modi et labore est ut ipsam. Aut eos reprehenderit ipsum deleniti consequatur numquam.",
    "redirect_url": "https://twila.org",
    "last_modified": "2021-04-04T13:27:55.8690275Z",
    "meta_description": "Est quia adipisci aut hic a. Animi molestiae et. Ut commodi exercitationem facere dolorem cumque aut atque expedita temporibus. Explicabo est occaecati nulla voluptatibus quia temporibus libero. Voluptatem consequatur quia. Reiciendis doloremque accusantium.",
    "meta_keywords": "nostrum et autem",
    "meta_title": "Magni deleniti neque quam consequatur sit magnam ab.",
    "total_product_stock": 59,
    "parent_product_id": 0,
    "options": [
      {
        "id": 245,
        "product_id": 737,
        "name": "Gift Wrapping",
        "is_required": false,
        "type": "DROPDOWN",
        "size": 0,
        "option_items": [
          {
            "id": 490,
            "product_option_id": 245,
            "name": "No",
            "price": 0.0,
            "is_placeholder": false
          },
          {
            "id": 491,
            "product_option_id": 245,
            "name": "Yes",
            "price": 2.33,
            "is_placeholder": false
          }
        ]
      }
    ],
    "variants": [
      {
        "id": 245,
        "parent_product_id": 0,
        "product_code": null,
        "rrp": 0.0,
        "is_default_variant": false,
        "number_in_stock": 0,
        "price": 0.0,
        "condition": null,
        "gtin": null,
        "mpn": null,
        "live": true,
        "variant_combinations": [
          {
            "variant_name": "Variant1",
            "variant_choice": "eius"
          },
          {
            "variant_name": "Variant2",
            "variant_choice": "fugiat"
          }
        ]
      }
    ],
    "categories": null,
    "attribute_items": null,
    "order_location": 0,
    "seo_friendly_url": "ekm---736-735-p.asp"
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a Product",
        "operationId": "Products_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "The category ID - Passing a category ID deletes the product from the specific category only",
            "schema": {
              "type": "integer",
              "description": "The category ID - Passing a category ID deletes the product from the specific category only",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a paginated set of products",
        "description": "The SEOFriendlyUrl property can be combined with the primary shop domain to get the shop page url for a Product in the format:\r\n{primary_domain}/{SEOFriendlyUrl}",
        "operationId": "Products_GetAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Product"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/products?page=1"
    },
    {
      "rel": "next",
      "href": "/products?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 738,
      "category_id": -285682441,
      "name": "EKM - 739",
      "description": "Veniam voluptates optio aut quidem sequi vero dolor adipisci. Labore facilis totam accusamus mollitia eum ut numquam. Id consequatur qui quis ullam ea fugit quas exercitationem dolorem.\n\nAut ea facere facilis error numquam sed. Deleniti velit odio ipsam repellendus. Et id nemo sed et velit magni voluptatum quos alias.\n\nIn id occaecati et error aliquid eos. Iusto veniam quo modi. Et commodi voluptas. Consectetur quis dolores officia qui temporibus. Velit quia qui facilis et voluptas accusamus. Vel accusantium illum recusandae at dolorem pariatur dicta dolor.",
      "short_description": "Amet cum consequatur eveniet consequatur et quia blanditiis. Non voluptatum voluptates perspiciatis aut harum enim. Excepturi quos qui voluptatem quasi quia quo. Enim nisi in.",
      "number_in_stock": 48,
      "price": 8.82,
      "rrp": 169624463.0,
      "product_code": "lc3zstrk",
      "charge_delivery": false,
      "special_offer": true,
      "brand": "Swaniawski - Kautzer",
      "condition": "New",
      "gtin": "yy89r4ot",
      "mpn": "tv2kmf31",
      "product_weight": 33.86355417215431,
      "can_be_added_to_cart": false,
      "tax_applicable": true,
      "tax_rate_id": 83,
      "live": true,
      "order_note": "Quis aperiam ullam. Optio tenetur alias illum aut blanditiis iure assumenda. Porro odit esse a voluptate consequatur. Et maiores et nisi veniam a tenetur molestiae blanditiis. Fugit dicta a animi qui exercitationem similique.",
      "redirect_url": "http://beulah.com",
      "last_modified": "2021-04-04T05:15:15.2572432Z",
      "meta_description": "Voluptas quis praesentium. Nobis sint commodi sint recusandae. Vitae qui laborum corporis esse a ut quod. Beatae commodi reprehenderit laboriosam corporis consequatur saepe sunt vel nulla. Nostrum recusandae doloribus voluptatem qui dolore aut delectus ad. Natus ut est.",
      "meta_keywords": "dignissimos alias eos",
      "meta_title": "Voluptas debitis est est vel architecto minus facere qui doloremque.",
      "total_product_stock": 90,
      "parent_product_id": 0,
      "options": [
        {
          "id": 246,
          "product_id": 740,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 492,
              "product_option_id": 246,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 493,
              "product_option_id": 246,
              "name": "Yes",
              "price": 3.96,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 246,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "nesciunt"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "molestias"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---739-738-p.asp"
    },
    {
      "id": 741,
      "category_id": -738562971,
      "name": "EKM - 742",
      "description": "Enim molestias ex odit fugiat dignissimos consequatur non quae tempora. Tempore alias maxime ipsa quidem earum vitae eos. Mollitia beatae qui harum similique mollitia natus. Delectus eius possimus quia rem non voluptas nihil. Rerum ullam esse totam cum error iure. Ex laudantium unde sed.\n\nAccusamus dolores corporis iure consectetur fugit quisquam. Labore rerum facilis dolore eum rem non. Quasi et suscipit veritatis.\n\nDucimus sequi sint sint consequatur quas numquam dolores perferendis. Accusamus optio rerum soluta. Perspiciatis est deserunt at. Veritatis non dolorem.",
      "short_description": "Corporis eligendi nobis impedit provident qui repudiandae aut numquam. Placeat dolores eos quo necessitatibus laborum et fugiat accusantium laudantium. In qui laudantium tenetur ex.",
      "number_in_stock": 74,
      "price": 39.07,
      "rrp": 151986620.0,
      "product_code": "d5ta562d",
      "charge_delivery": false,
      "special_offer": false,
      "brand": "Pouros - Altenwerth",
      "condition": "Used",
      "gtin": "gyitpwao",
      "mpn": "wqx82wu9",
      "product_weight": 91.69851534753037,
      "can_be_added_to_cart": true,
      "tax_applicable": false,
      "tax_rate_id": 157,
      "live": true,
      "order_note": "Aperiam tempora dicta quae. Rem cum odit eius. Aut officiis qui autem magni. Pariatur accusantium non aliquam quod non adipisci. Sint voluptas atque omnis sunt et inventore maxime.",
      "redirect_url": "http://yasmin.org",
      "last_modified": "2021-04-04T10:04:55.1869653Z",
      "meta_description": "Harum voluptatem architecto aut corrupti harum omnis a expedita. Inventore id sit placeat magni. Eum praesentium dolorem doloremque ea magni qui maiores ut. Ipsam enim ea.",
      "meta_keywords": "et laudantium ut",
      "meta_title": "Repellendus numquam consequatur blanditiis veniam aliquam in quam.",
      "total_product_stock": 60,
      "parent_product_id": 0,
      "options": [
        {
          "id": 247,
          "product_id": 743,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 494,
              "product_option_id": 247,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 495,
              "product_option_id": 247,
              "name": "Yes",
              "price": 4.77,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 247,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "voluptas"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "molestiae"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---742-741-p.asp"
    },
    {
      "id": 744,
      "category_id": 914171447,
      "name": "EKM - 745",
      "description": "Eum pariatur quidem suscipit cupiditate nisi numquam neque neque. Rerum aut doloribus. Sed dolorem voluptatem eaque saepe quam asperiores optio. Omnis qui et quas eaque ut.\n\nEt est omnis. Dolores architecto totam nulla et similique. Placeat ipsa totam. Repudiandae quas perferendis. Atque iusto doloribus et est dolores nihil debitis sint.\n\nDolor dolorum fuga quia aut commodi incidunt sit impedit. At adipisci doloremque pariatur eveniet hic eum nostrum. Id repellat accusantium placeat inventore similique quidem nihil. Quaerat quasi velit tenetur aut voluptatem reprehenderit voluptatum quia sint. Impedit nobis ipsum nemo quae et. Sapiente illo officiis sit.",
      "short_description": "Recusandae non modi nisi quo aut consequatur. Repellendus aliquam repudiandae dolorem. Quae et tempora. Et et rem rerum.",
      "number_in_stock": 59,
      "price": 15.12,
      "rrp": -1633798686.0,
      "product_code": "xvzj0ffi",
      "charge_delivery": true,
      "special_offer": true,
      "brand": "MacGyver, Rempel and Funk",
      "condition": "New",
      "gtin": "732gbil5",
      "mpn": "wixjj4e3",
      "product_weight": 76.86915254679934,
      "can_be_added_to_cart": false,
      "tax_applicable": false,
      "tax_rate_id": 843,
      "live": false,
      "order_note": "Iste quis distinctio labore architecto quidem unde. Modi consequatur praesentium nihil eum totam fugiat ipsa illo eum. Cumque molestiae voluptas cum est sed architecto aperiam. Amet voluptas dolor labore id iste commodi. Quae dignissimos explicabo. Et qui sit a mollitia ducimus ex sunt.",
      "redirect_url": "https://mohammad.com",
      "last_modified": "2021-04-04T19:33:34.7500319Z",
      "meta_description": "Ipsum eos tempora optio aut quia. Id non quo. Dolorem eius qui ad aut placeat.",
      "meta_keywords": "asperiores est minus",
      "meta_title": "Sed optio enim.",
      "total_product_stock": 14,
      "parent_product_id": 0,
      "options": [
        {
          "id": 248,
          "product_id": 746,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 496,
              "product_option_id": 248,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 497,
              "product_option_id": 248,
              "name": "Yes",
              "price": 3.34,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 248,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "porro"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "illo"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---745-744-p.asp"
    },
    {
      "id": 747,
      "category_id": -1549502452,
      "name": "EKM - 748",
      "description": "Quidem est sit est in suscipit voluptas. Qui minima esse quidem. Consectetur occaecati voluptatem omnis.\n\nRerum placeat tenetur aut quam illum inventore consequuntur voluptates est. Impedit quibusdam quam. Ut a aut ut accusantium magni. Aut aut quibusdam qui. Omnis ipsam dolore nihil. Maiores ipsam suscipit facere nobis saepe voluptas eum.\n\nAt mollitia quis sunt. Eius distinctio a error quia perspiciatis tenetur. Cum omnis earum vitae delectus rerum veniam vel distinctio. Velit est deleniti vitae id unde et ut ea nobis.",
      "short_description": "Voluptate iure vero delectus commodi a quis quidem. Harum cum tempore qui cum eaque rerum doloribus accusamus qui. Aut molestiae laudantium aut eius. Beatae accusamus illum molestiae molestias assumenda. Voluptatum delectus labore.",
      "number_in_stock": 36,
      "price": 83.42,
      "rrp": 1865142313.0,
      "product_code": "r5tfe4d1",
      "charge_delivery": false,
      "special_offer": true,
      "brand": "Gottlieb - Conroy",
      "condition": "New",
      "gtin": "b32k0m4d",
      "mpn": "m2gzqgad",
      "product_weight": 38.21948338636173,
      "can_be_added_to_cart": false,
      "tax_applicable": false,
      "tax_rate_id": 228,
      "live": false,
      "order_note": "Ex nobis dolores. Doloremque cupiditate distinctio aut. Consequatur et consectetur veritatis qui adipisci et debitis. Eos eos et voluptate dolores eos eos enim officiis. In eius at magni soluta. Blanditiis aut ducimus quaerat.",
      "redirect_url": "https://verona.info",
      "last_modified": "2021-04-03T22:20:55.554987Z",
      "meta_description": "Aliquam perspiciatis numquam fuga non nesciunt quisquam nulla vel. Qui consectetur rerum amet quidem aut omnis est. In cupiditate a libero molestias. Itaque eius quia et sequi dolor porro nesciunt id et. Molestiae est nisi dolorem cum. Voluptatum iusto vero aut excepturi.",
      "meta_keywords": "repellendus consequatur dolore",
      "meta_title": "Nemo dicta amet veniam exercitationem debitis nihil qui deserunt itaque.",
      "total_product_stock": 73,
      "parent_product_id": 0,
      "options": [
        {
          "id": 249,
          "product_id": 749,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 498,
              "product_option_id": 249,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 499,
              "product_option_id": 249,
              "name": "Yes",
              "price": 1.13,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 249,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "excepturi"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "incidunt"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---748-747-p.asp"
    },
    {
      "id": 750,
      "category_id": 1115318090,
      "name": "EKM - 751",
      "description": "Et voluptatem ad rerum ratione. Est nostrum fuga qui reiciendis natus fugit culpa quia. Fugiat voluptates repudiandae quia.\n\nRepellendus assumenda autem dolorem eos dicta nihil. Delectus eius nobis. Asperiores illo fuga sunt odit placeat ullam sint. Esse qui quia beatae omnis rem consequatur minima cum. Voluptas harum quidem deleniti quas molestias quia voluptatibus cupiditate.\n\nCorrupti possimus debitis eum officia enim sed. Et dolorem voluptates minus fugiat quis ipsa aliquam. Enim et optio aut quis velit voluptas aspernatur. Sunt sed qui repellendus voluptas. Sit incidunt molestiae aut dolore eligendi sapiente sed rem.",
      "short_description": "Nesciunt qui alias et nostrum consequuntur. Facilis illo consequatur dolorem quas fugit vero consequatur est. Inventore voluptatem asperiores aut accusamus adipisci. Earum minus perferendis ut voluptatem eveniet reiciendis. Deserunt voluptates non in et. Soluta adipisci dolores autem neque aut officia quisquam.",
      "number_in_stock": 88,
      "price": 80.32,
      "rrp": -67396563.0,
      "product_code": "xb34a6w5",
      "charge_delivery": false,
      "special_offer": false,
      "brand": "Volkman Group",
      "condition": "Used",
      "gtin": "h8nxffed",
      "mpn": "7vmzbyf7",
      "product_weight": 64.79536843150639,
      "can_be_added_to_cart": true,
      "tax_applicable": true,
      "tax_rate_id": 902,
      "live": true,
      "order_note": "Aliquam in tempore et necessitatibus id. Ut aperiam quis incidunt. Esse nesciunt perferendis in magni in animi dignissimos.",
      "redirect_url": "http://adaline.com",
      "last_modified": "2021-04-04T07:34:53.9215183Z",
      "meta_description": "Tempora ut velit voluptas repudiandae adipisci. Laudantium et voluptas non explicabo accusamus dignissimos. Qui fuga numquam voluptate minus molestias. Vel eos et.",
      "meta_keywords": "quibusdam quas sed",
      "meta_title": "Qui dolore cupiditate quia dolores distinctio totam temporibus.",
      "total_product_stock": 94,
      "parent_product_id": 0,
      "options": [
        {
          "id": 250,
          "product_id": 752,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 500,
              "product_option_id": 250,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 501,
              "product_option_id": 250,
              "name": "Yes",
              "price": 0.47,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 250,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "culpa"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "sed"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---751-750-p.asp"
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a Product",
        "description": "Options and variants must be added separately",
        "operationId": "Products_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1AddProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added Product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 753,
    "category_id": 1451149857,
    "name": "EKM - 754",
    "description": "Aut nisi quos officia in qui magnam nulla. Fuga consequatur inventore repellendus exercitationem. Cumque doloribus dicta voluptates minus voluptas. Quibusdam earum qui est vel accusantium quia natus facere. Sequi a est labore maxime totam et.\n\nOfficia non consequuntur. Deleniti aspernatur debitis et architecto. Laborum nihil dolorem repellendus aut perspiciatis. Consectetur molestiae voluptas tempora tempore id accusamus.\n\nEum nobis non a occaecati expedita et expedita aliquam error. Quidem repudiandae omnis et qui aspernatur nesciunt qui. Voluptas quia quas. Consectetur minima quas dolores pariatur repudiandae voluptatum aliquam.",
    "short_description": "Sed unde aut hic tenetur blanditiis debitis impedit officia quos. Labore illo consequatur in quia et excepturi. Fugit ut rerum ipsum beatae omnis qui cumque sit.",
    "number_in_stock": 58,
    "price": 11.58,
    "rrp": -1644140324.0,
    "product_code": "sb9y3pfs",
    "charge_delivery": false,
    "special_offer": true,
    "brand": "Beer and Sons",
    "condition": "New",
    "gtin": "nmw6wji4",
    "mpn": "ocs92ord",
    "product_weight": 27.889404919878302,
    "can_be_added_to_cart": false,
    "tax_applicable": true,
    "tax_rate_id": 421,
    "live": true,
    "order_note": "Assumenda dolorem provident sed debitis sint ad autem voluptatem eum. Culpa qui qui in expedita dolor sint. Et voluptatem nesciunt consequatur laboriosam sunt esse mollitia laboriosam. Nemo aut maiores ad amet. Nesciunt rerum delectus illum ad. Magni incidunt sit.",
    "redirect_url": "http://sister.name",
    "last_modified": "2021-04-04T19:32:49.4788851Z",
    "meta_description": "Et perferendis et ut quidem aut est ea consectetur dignissimos. Voluptatem itaque explicabo tenetur vero officia. Perspiciatis temporibus esse perferendis non. Quos labore voluptatem non temporibus repellat velit rerum. Laboriosam nam exercitationem quasi quidem quidem vel maxime. Qui occaecati ex tenetur et aperiam ad nesciunt possimus.",
    "meta_keywords": "officia maiores aut",
    "meta_title": "Id et sed at in repellendus soluta.",
    "total_product_stock": 20,
    "parent_product_id": 0,
    "options": [
      {
        "id": 251,
        "product_id": 755,
        "name": "Gift Wrapping",
        "is_required": false,
        "type": "DROPDOWN",
        "size": 0,
        "option_items": [
          {
            "id": 502,
            "product_option_id": 251,
            "name": "No",
            "price": 0.0,
            "is_placeholder": false
          },
          {
            "id": 503,
            "product_option_id": 251,
            "name": "Yes",
            "price": 1.23,
            "is_placeholder": false
          }
        ]
      }
    ],
    "variants": [
      {
        "id": 251,
        "parent_product_id": 0,
        "product_code": null,
        "rrp": 0.0,
        "is_default_variant": false,
        "number_in_stock": 0,
        "price": 0.0,
        "condition": null,
        "gtin": null,
        "mpn": null,
        "live": true,
        "variant_combinations": [
          {
            "variant_name": "Variant1",
            "variant_choice": "similique"
          },
          {
            "variant_name": "Variant2",
            "variant_choice": "adipisci"
          }
        ]
      }
    ],
    "categories": null,
    "attribute_items": null,
    "order_location": 0,
    "seo_friendly_url": "ekm---754-753-p.asp"
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Searches products based on search criteria",
        "description": "The SEOFriendlyUrl property can be combined with the primary shop domain to get the shop page url for a Product in the format:\r\n{primary_domain}/{SEOFriendlyUrl}",
        "operationId": "Products_Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. live eq true",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Product"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/products?page=1"
    },
    {
      "rel": "next",
      "href": "/products?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 756,
      "category_id": -1232207020,
      "name": "EKM - 757",
      "description": "Aliquam et est. Perspiciatis temporibus sit. Consequatur totam aut et doloremque nostrum. Rerum aut voluptatem fuga tempora.\n\nQuidem quos magnam quasi qui quod. Ullam fugit cupiditate voluptate repellat soluta occaecati rerum. Voluptatum illo ea dolor sint cumque quam. A sunt repellat omnis qui aut beatae neque culpa.\n\nVelit eum voluptatum sed ad nobis impedit aliquid corrupti. Doloremque est dolor eligendi cupiditate nulla. Et tempore sed itaque quasi atque aut. Quod et pariatur incidunt dignissimos et. Debitis est maxime possimus alias pariatur. Explicabo non ut.",
      "short_description": "Aut et qui illo delectus. Aut eos ipsam. Quibusdam doloremque itaque tenetur. Libero sit voluptas autem dolorem et dolorem et. Maiores eum corporis esse natus sed nihil.",
      "number_in_stock": 38,
      "price": 8.35,
      "rrp": -1284992178.0,
      "product_code": "nsyo51mk",
      "charge_delivery": true,
      "special_offer": false,
      "brand": "Sauer and Sons",
      "condition": "New",
      "gtin": "ocj6znm8",
      "mpn": "lwlr2hvs",
      "product_weight": 92.79566106423533,
      "can_be_added_to_cart": true,
      "tax_applicable": true,
      "tax_rate_id": 218,
      "live": true,
      "order_note": "Molestias exercitationem voluptates. Vero magni ut commodi quo. Voluptas eos quia ipsa ratione laborum minus. Rerum voluptas nulla. Repellendus in quia officia eos odit sit aut. Quo et consectetur itaque hic molestias id.",
      "redirect_url": "https://lewis.info",
      "last_modified": "2021-04-03T22:08:14.7924702Z",
      "meta_description": "Unde sit aliquid tempora. Incidunt ipsam placeat neque dolores neque adipisci temporibus excepturi suscipit. Enim doloribus et sit cumque perferendis non itaque non odit. Odit consequuntur amet sit. Quia culpa labore dolore aut.",
      "meta_keywords": "commodi aliquam debitis",
      "meta_title": "Voluptatem ea cumque possimus repellat ratione odio quia distinctio.",
      "total_product_stock": 49,
      "parent_product_id": 0,
      "options": [
        {
          "id": 252,
          "product_id": 758,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 504,
              "product_option_id": 252,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 505,
              "product_option_id": 252,
              "name": "Yes",
              "price": 0.84,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 252,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "mollitia"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "et"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---757-756-p.asp"
    },
    {
      "id": 759,
      "category_id": -974429883,
      "name": "EKM - 760",
      "description": "Ut suscipit tempora molestiae accusantium deserunt nulla omnis eveniet. Iure laborum eos qui cum suscipit nihil expedita sunt. Atque repellat autem laboriosam omnis et. Voluptas veniam pariatur et veniam corrupti sed. Quo alias odio autem cum molestiae vel.\n\nTempora dolorum recusandae placeat similique. Eos id rerum. Enim enim ut necessitatibus voluptatem. Repellat consequatur quos ab.\n\nConsequuntur recusandae quia. Suscipit ut et eveniet tenetur odit molestias quas aut. Recusandae pariatur ad numquam.",
      "short_description": "Voluptatum nulla distinctio. Eum saepe tenetur aut itaque dolorem dicta est. Saepe et qui alias aut ipsum incidunt commodi. Enim ad sequi iure aut et ut quasi similique. Voluptate voluptas voluptatem occaecati.",
      "number_in_stock": 3,
      "price": 34.15,
      "rrp": 1147622206.0,
      "product_code": "eas17mzs",
      "charge_delivery": false,
      "special_offer": false,
      "brand": "Romaguera Inc",
      "condition": "Used",
      "gtin": "sz793ywq",
      "mpn": "dbfn86xy",
      "product_weight": 34.13084472861646,
      "can_be_added_to_cart": true,
      "tax_applicable": false,
      "tax_rate_id": 890,
      "live": false,
      "order_note": "Quis harum soluta. Rerum odio odit quia dolores repellat. Est id accusamus id ab ipsam quia. Eaque dolor asperiores tempora ratione qui minima laboriosam sequi.",
      "redirect_url": "https://susana.com",
      "last_modified": "2021-04-04T03:23:54.6191979Z",
      "meta_description": "Eius reiciendis ut numquam non modi et. Maiores distinctio recusandae enim unde voluptatum. Quis veniam et nobis in quaerat suscipit exercitationem ea. Optio id aut tenetur ex deserunt hic. Sit sint saepe quas quo repellendus voluptatibus cumque. Autem suscipit exercitationem quo dolor aut dolores accusamus.",
      "meta_keywords": "corrupti alias ea",
      "meta_title": "Quis rerum nobis fugiat soluta.",
      "total_product_stock": 22,
      "parent_product_id": 0,
      "options": [
        {
          "id": 253,
          "product_id": 761,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 506,
              "product_option_id": 253,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 507,
              "product_option_id": 253,
              "name": "Yes",
              "price": 4.82,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 253,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "fugiat"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "dolorum"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---760-759-p.asp"
    },
    {
      "id": 762,
      "category_id": 954772307,
      "name": "EKM - 763",
      "description": "Sint rerum suscipit excepturi aut aut placeat quo voluptatem. Et ut aperiam molestiae corrupti. Et corporis commodi itaque assumenda praesentium veniam. Quae aliquam neque sed.\n\nVoluptas officia voluptatibus et aut omnis quis dignissimos magnam. Architecto repellat laborum. Voluptatibus enim qui voluptatem nobis voluptatem cum architecto. Blanditiis sit blanditiis distinctio dicta laudantium. Consequatur harum dolor occaecati molestias et doloribus.\n\nItaque et quam. Laboriosam et est. Officia ut id aut qui et molestias quia eligendi.",
      "short_description": "Unde dicta ipsa aut distinctio esse libero ut est. Voluptatibus ipsam qui ea ea voluptas deleniti reprehenderit. Voluptatum sit quod aut nostrum. Laboriosam qui nihil autem. Quibusdam dolores nihil a inventore repellat dolorem impedit. Ut tempora veniam atque rerum ipsum quidem ut autem fugiat.",
      "number_in_stock": 53,
      "price": 28.18,
      "rrp": -147289993.0,
      "product_code": "mdyysg4p",
      "charge_delivery": true,
      "special_offer": false,
      "brand": "Dietrich, Crooks and Gleason",
      "condition": "Used",
      "gtin": "vmjy3pis",
      "mpn": "l3vlldwm",
      "product_weight": 88.5724810965231,
      "can_be_added_to_cart": true,
      "tax_applicable": false,
      "tax_rate_id": 890,
      "live": true,
      "order_note": "Numquam dignissimos illum explicabo amet voluptas quia quia. Placeat dolor aliquam voluptatem dolores deserunt dolore laborum quasi qui. Maxime libero velit tempore in illum sed totam. Dolorum quae sapiente dignissimos. Quia quam a facere in. Esse atque neque nobis qui et libero maiores non quidem.",
      "redirect_url": "https://reagan.info",
      "last_modified": "2021-04-04T17:38:13.4312966Z",
      "meta_description": "Unde dolore ratione optio quis autem at beatae ea cumque. Vel tempore aut quia nostrum vero tempore rerum ipsam. Quas excepturi earum provident ratione.",
      "meta_keywords": "omnis ut id",
      "meta_title": "Incidunt et adipisci reprehenderit in quia vel inventore accusantium.",
      "total_product_stock": 43,
      "parent_product_id": 0,
      "options": [
        {
          "id": 254,
          "product_id": 764,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 508,
              "product_option_id": 254,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 509,
              "product_option_id": 254,
              "name": "Yes",
              "price": 2.04,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 254,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "ratione"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "natus"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---763-762-p.asp"
    },
    {
      "id": 765,
      "category_id": 1730772840,
      "name": "EKM - 766",
      "description": "Sit blanditiis ab odio aperiam accusantium. Optio qui dicta vitae nulla amet. Ducimus numquam qui labore. Est iste consequuntur amet architecto quia rerum adipisci. Dolore distinctio alias. Recusandae ut amet impedit et harum harum quas.\n\nAut nemo ad quod quo quia quam eligendi fugit mollitia. Consectetur rerum saepe ut reiciendis ipsam qui fugiat eum. Et vitae esse repudiandae quis ab. Qui explicabo id quia eveniet natus quia debitis. Eum molestiae officiis qui omnis perspiciatis voluptate et quod. Exercitationem dignissimos et.\n\nTempore dignissimos unde aut. Vero eum molestiae enim. Odit voluptatem doloribus deserunt exercitationem voluptas similique iure. Recusandae totam sapiente et.",
      "short_description": "Quaerat at dicta molestiae quaerat eligendi provident odio est. Et et et itaque aliquam excepturi qui et quo ut. Accusamus sequi quas quo dolor nulla nisi sed neque. Architecto nam provident numquam optio iure qui ea. Ut natus et et voluptas fugiat excepturi.",
      "number_in_stock": 38,
      "price": 26.73,
      "rrp": 1944636046.0,
      "product_code": "zzrcy5kx",
      "charge_delivery": true,
      "special_offer": false,
      "brand": "Price, Lehner and Batz",
      "condition": "New",
      "gtin": "p1q7588b",
      "mpn": "gjgbmaf0",
      "product_weight": 67.76225008478494,
      "can_be_added_to_cart": false,
      "tax_applicable": false,
      "tax_rate_id": 172,
      "live": false,
      "order_note": "Recusandae est consequatur sed qui. Odio et itaque. Dolores animi ut ducimus cupiditate quam enim. Eligendi est illo rem iure assumenda. Facilis est quas omnis nemo expedita neque excepturi. Quia dolore dolorum inventore voluptas ipsam.",
      "redirect_url": "http://murphy.biz",
      "last_modified": "2021-04-03T22:56:18.9161043Z",
      "meta_description": "Ea ut qui vero aliquam minima quisquam in aperiam labore. Iure animi dolorem consequatur ea itaque. Harum eveniet suscipit. Excepturi enim ad.",
      "meta_keywords": "et numquam est",
      "meta_title": "Deserunt voluptatem incidunt aut autem aliquid.",
      "total_product_stock": 56,
      "parent_product_id": 0,
      "options": [
        {
          "id": 255,
          "product_id": 767,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 510,
              "product_option_id": 255,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 511,
              "product_option_id": 255,
              "name": "Yes",
              "price": 3.23,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 255,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "maxime"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "velit"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---766-765-p.asp"
    },
    {
      "id": 768,
      "category_id": 639074204,
      "name": "EKM - 769",
      "description": "Provident est eaque. Animi pariatur et qui. Ratione tempora a facilis ratione ea sunt dolores. Itaque similique eius. Harum quas eos dolorum perferendis quaerat quam.\n\nUt dolor officiis quis laborum repellat. Necessitatibus et natus commodi dolore est libero et ea consequatur. Dicta necessitatibus similique tempora aspernatur et repudiandae. Provident quis reiciendis fugiat.\n\nEum possimus voluptas dolor est vero maxime in eos ipsum. Aut at quis voluptatibus quo. Voluptatem est est suscipit odio qui tempore beatae consequatur quis. Totam fuga voluptates autem neque reprehenderit.",
      "short_description": "Omnis esse dolor reiciendis culpa. Ea est fuga non sequi beatae. Sit et nulla sapiente qui. Eaque tempora quos voluptatum non omnis. Autem eveniet dolorem alias excepturi saepe distinctio accusantium et neque.",
      "number_in_stock": 89,
      "price": 50.97,
      "rrp": -2004655156.0,
      "product_code": "h5pu081y",
      "charge_delivery": true,
      "special_offer": false,
      "brand": "Schneider LLC",
      "condition": "Used",
      "gtin": "6mlhn9e6",
      "mpn": "kg247fx8",
      "product_weight": 34.742755964278594,
      "can_be_added_to_cart": true,
      "tax_applicable": true,
      "tax_rate_id": 587,
      "live": true,
      "order_note": "Placeat qui repudiandae dicta aut perspiciatis nesciunt. Autem porro amet tempore rerum rerum itaque et. Voluptas corrupti ad aut sint voluptatem occaecati pariatur. Molestias explicabo dolores voluptates cum eos. Qui est nihil omnis asperiores repellat dolorem enim assumenda dolore. Id quos placeat sint.",
      "redirect_url": "https://marlon.info",
      "last_modified": "2021-04-03T23:45:37.5977559Z",
      "meta_description": "Sint in ut. Reprehenderit labore unde eaque. Sed totam eaque. Quod illum quaerat. Saepe impedit assumenda distinctio delectus laboriosam ut. Sint ex quo.",
      "meta_keywords": "officia qui consequatur",
      "meta_title": "Vero fugit velit quam blanditiis quis consequatur.",
      "total_product_stock": 9,
      "parent_product_id": 0,
      "options": [
        {
          "id": 256,
          "product_id": 770,
          "name": "Gift Wrapping",
          "is_required": false,
          "type": "DROPDOWN",
          "size": 0,
          "option_items": [
            {
              "id": 512,
              "product_option_id": 256,
              "name": "No",
              "price": 0.0,
              "is_placeholder": false
            },
            {
              "id": 513,
              "product_option_id": 256,
              "name": "Yes",
              "price": 3.94,
              "is_placeholder": false
            }
          ]
        }
      ],
      "variants": [
        {
          "id": 256,
          "parent_product_id": 0,
          "product_code": null,
          "rrp": 0.0,
          "is_default_variant": false,
          "number_in_stock": 0,
          "price": 0.0,
          "condition": null,
          "gtin": null,
          "mpn": null,
          "live": true,
          "variant_combinations": [
            {
              "variant_name": "Variant1",
              "variant_choice": "facere"
            },
            {
              "variant_name": "Variant2",
              "variant_choice": "ducimus"
            }
          ]
        }
      ],
      "categories": null,
      "attribute_items": null,
      "order_location": 0,
      "seo_friendly_url": "ekm---769-768-p.asp"
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/categorymanaged/{categoryId}": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Set a product to be managed by another category",
        "operationId": "Products_SetCategoryManaged",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The added managed category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductCategory"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "category_id": 10,
    "is_category_managed": true
  }
}
              }
            }
          },
          "400": {
            "description": "The product already exists in the category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or category for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Stops a product from being managed by another category",
        "operationId": "Products_DeleteCategoryManaged",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The removed managed category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductCategory"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "The product does not exists in the category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/images": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product's images.",
        "description": "Images stored on EKM servers will have the location property of the response set to the path of the image file. This will need to be prepended with the shop's domain.\r\nRemote images will have the remote property of the response set to the URL of the image.\r\nImages that have been deleted will have the location property of the response set to \"No image available.\"",
        "operationId": "Products_GetProductImages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The chosen product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductImages"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "image1": {
      "id": 42,
      "local": "nesciunt-omnis-facere.gif",
      "remote": "",
      "width": 579,
      "height": 249,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T01:42:59.7451356Z",
      "section_type": "PRODUCT"
    },
    "image2": {
      "id": 42,
      "local": "",
      "remote": "https://margarita.com/ea-omnis-veritatis.gif",
      "width": 674,
      "height": 955,
      "location": "",
      "upload_date": "2021-04-04T09:57:41.5403856Z",
      "section_type": "PRODUCT"
    },
    "image3": {
      "id": 42,
      "local": "",
      "remote": "",
      "width": 70,
      "height": 992,
      "location": "No image available",
      "upload_date": "2021-04-04T09:02:07.5607354Z",
      "section_type": "PRODUCT"
    },
    "image4": {
      "id": 42,
      "local": "molestiae-qui-earum.gif",
      "remote": "",
      "width": 852,
      "height": 907,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T09:43:26.2997388Z",
      "section_type": "PRODUCT"
    },
    "image5": {
      "id": 42,
      "local": "qui-aut-tempora.gif",
      "remote": "",
      "width": 958,
      "height": 186,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T12:39:01.3584382Z",
      "section_type": "PRODUCT"
    }
  }
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/images/{imageNumber}": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Assign an image by Url to a product",
        "description": "An example URL request path would look something like:\r\n            \r\n    https://api.ekm.net/api/v1/products/5/images/1?imageurl=https://www.ekm.com/images/design/en-AU/logo.svg",
        "operationId": "Products_AssignImageByUrlToProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "imageNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The images assigned to the product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductImages"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "image1": {
      "id": 43,
      "local": "officiis-quisquam-omnis.gif",
      "remote": "",
      "width": 981,
      "height": 540,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T12:50:11.7918931Z",
      "section_type": "PRODUCT"
    },
    "image2": {
      "id": 43,
      "local": "",
      "remote": "https://oswaldo.org/nihil-perferendis-at.gif",
      "width": 932,
      "height": 497,
      "location": "",
      "upload_date": "2021-04-04T11:45:55.0649282Z",
      "section_type": "PRODUCT"
    },
    "image3": {
      "id": 43,
      "local": "",
      "remote": "",
      "width": 772,
      "height": 822,
      "location": "No image available",
      "upload_date": "2021-04-03T23:50:53.6716692Z",
      "section_type": "PRODUCT"
    },
    "image4": {
      "id": 43,
      "local": "necessitatibus-et-et.gif",
      "remote": "",
      "width": 498,
      "height": 370,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T15:09:44.5463113Z",
      "section_type": "PRODUCT"
    },
    "image5": {
      "id": 43,
      "local": "voluptas-aut-et.gif",
      "remote": "",
      "width": 326,
      "height": 348,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T16:23:29.897249Z",
      "section_type": "PRODUCT"
    }
  }
}
              }
            }
          },
          "404": {
            "description": "The product does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/stock": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Get the stock for a product",
        "operationId": "ProductStock_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stock of a chosen product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductStock"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "stock": 89,
    "total_product_stock": 268
  }
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Set the stock for a product",
        "operationId": "ProductStock_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductStock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The stock of a chosen product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductStock"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "stock": 89,
    "total_product_stock": 268
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1Product"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/variants": {
      "get": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Get a products variants",
        "operationId": "ProductVariants_GetAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The products variants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductVariant"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/products?page=1"
    },
    {
      "rel": "next",
      "href": "/products?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 150,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 53.64,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 42.71,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "at"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "numquam"
        }
      ]
    },
    {
      "id": 151,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 71.56,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 26.6,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "id"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "corrupti"
        }
      ]
    },
    {
      "id": 152,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 28.46,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 83.27,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "atque"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "nesciunt"
        }
      ]
    },
    {
      "id": 153,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 28.4,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 11.37,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "ab"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "sint"
        }
      ]
    },
    {
      "id": 154,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 37.92,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 22.19,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "sunt"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "vel"
        }
      ]
    }
  ]
}
              }
            }
          },
          "404": {
            "description": "No product for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "422": {
            "description": "Unprocessable product ID - The ID belongs to either a variant or a managed product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00273\u0027 is a variant. Please use master product Id \u00271\u0027"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Add a variant to a product",
        "operationId": "ProductVariants_Create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductVariant"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The added variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 155,
    "parent_product_id": 0,
    "product_code": null,
    "rrp": 46.66,
    "is_default_variant": false,
    "number_in_stock": 0,
    "price": 18.15,
    "condition": null,
    "gtin": null,
    "mpn": null,
    "live": true,
    "variant_combinations": [
      {
        "variant_name": "Variant1",
        "variant_choice": "aperiam"
      },
      {
        "variant_name": "Variant2",
        "variant_choice": "voluptatem"
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/variants/{variantId}": {
      "get": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Get a product variant",
        "operationId": "ProductVariants_GetProductVariant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 156,
    "parent_product_id": 0,
    "product_code": null,
    "rrp": 63.59,
    "is_default_variant": false,
    "number_in_stock": 0,
    "price": 0.34,
    "condition": null,
    "gtin": null,
    "mpn": null,
    "live": true,
    "variant_combinations": [
      {
        "variant_name": "Variant1",
        "variant_choice": "sunt"
      },
      {
        "variant_name": "Variant2",
        "variant_choice": "cumque"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "No variant found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Update a product variant",
        "operationId": "ProductVariants_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductVariant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 157,
    "parent_product_id": 0,
    "product_code": null,
    "rrp": 40.33,
    "is_default_variant": false,
    "number_in_stock": 0,
    "price": 53.35,
    "condition": null,
    "gtin": null,
    "mpn": null,
    "live": true,
    "variant_combinations": [
      {
        "variant_name": "Variant1",
        "variant_choice": "id"
      },
      {
        "variant_name": "Variant2",
        "variant_choice": "facilis"
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No variant for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Delete a variant",
        "operationId": "ProductVariants_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variant deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No variant for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/variants/{variantId}": {
      "get": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Get a product variant",
        "operationId": "ProductVariants_Get",
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 158,
    "parent_product_id": 0,
    "product_code": null,
    "rrp": 74.49,
    "is_default_variant": false,
    "number_in_stock": 0,
    "price": 93.43,
    "condition": null,
    "gtin": null,
    "mpn": null,
    "live": true,
    "variant_combinations": [
      {
        "variant_name": "Variant1",
        "variant_choice": "quia"
      },
      {
        "variant_name": "Variant2",
        "variant_choice": "dolore"
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "No variant found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/variants/search": {
      "get": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Searches variants based on search criteria",
        "operationId": "ProductVariants_Search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to display",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A <a href=\"#tag/OData\" target=\"_blank\">search</a> query e.g. live eq true",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to order results. Prefix with a - (dash) for descending e.g. -id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of variants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductVariant"
                },
                "example": {
  "meta": {
    "pages_total": 2,
    "items_total": 10,
    "items_per_page": 5
  },
  "links": [
    {
      "rel": "current",
      "href": "/products?page=1"
    },
    {
      "rel": "next",
      "href": "/products?page=2"
    }
  ],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 159,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 49.0,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 7.89,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "placeat"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "dolores"
        }
      ]
    },
    {
      "id": 160,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 26.56,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 6.67,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "accusantium"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "beatae"
        }
      ]
    },
    {
      "id": 161,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 6.38,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 0.22,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "omnis"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "qui"
        }
      ]
    },
    {
      "id": 162,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 82.39,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 56.8,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "explicabo"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "temporibus"
        }
      ]
    },
    {
      "id": 163,
      "parent_product_id": 0,
      "product_code": null,
      "rrp": 59.61,
      "is_default_variant": false,
      "number_in_stock": 0,
      "price": 74.97,
      "condition": null,
      "gtin": null,
      "mpn": null,
      "live": true,
      "variant_combinations": [
        {
          "variant_name": "Variant1",
          "variant_choice": "iusto"
        },
        {
          "variant_name": "Variant2",
          "variant_choice": "sapiente"
        }
      ]
    }
  ]
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListV1ProductVariant"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Invalid search expression"
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/variants/{variantId}/images": {
      "get": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Get a variant's images.",
        "description": "Images stored on EKM servers will have the location property of the response set to the path of the image file. This will need to be prepended with the shop's domain.\r\nRemote images will have the remote property of the response set to the URL of the image.\r\nImages that have been deleted will have the location property of the response set to \"No image available.\"",
        "operationId": "ProductVariants_GetProductImages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The variant was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductImages"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "image1": {
      "id": 44,
      "local": "et-fuga-aperiam.gif",
      "remote": "",
      "width": 548,
      "height": 514,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T15:26:25.7817749Z",
      "section_type": "PRODUCT"
    },
    "image2": {
      "id": 44,
      "local": "",
      "remote": "https://damion.info/aut-aut-iusto.gif",
      "width": 440,
      "height": 978,
      "location": "",
      "upload_date": "2021-04-04T04:10:45.4825407Z",
      "section_type": "PRODUCT"
    },
    "image3": {
      "id": 44,
      "local": "",
      "remote": "",
      "width": 645,
      "height": 750,
      "location": "No image available",
      "upload_date": "2021-04-03T21:35:22.9336523Z",
      "section_type": "PRODUCT"
    },
    "image4": {
      "id": 44,
      "local": "a-ipsam-itaque.gif",
      "remote": "",
      "width": 938,
      "height": 321,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T09:55:39.9449791Z",
      "section_type": "PRODUCT"
    },
    "image5": {
      "id": 44,
      "local": "impedit-nemo-vel.gif",
      "remote": "",
      "width": 519,
      "height": 880,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T17:17:47.7115489Z",
      "section_type": "PRODUCT"
    }
  }
}
              }
            }
          },
          "404": {
            "description": "No variant for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/variants/{variantId}/images/{imageNumber}": {
      "post": {
        "tags": [
          "ProductVariants"
        ],
        "summary": "Set a variants image to a URL",
        "description": "An example URL request path would look something like:\r\n            \r\n    https://api.ekm.net/api/v1/products/5/variants/42/images/1?imageurl=https://www.ekm.com/images/design/en-AU/logo.svg",
        "operationId": "ProductVariants_AssignImageByUrlToProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The variant ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The variant ID",
              "format": "int64"
            }
          },
          {
            "name": "imageNumber",
            "in": "path",
            "description": "The image number",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The image number",
              "format": "int32"
            }
          },
          {
            "name": "imageUrl",
            "in": "query",
            "description": "The URL of the image",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The URL of the image",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The images were assigned to the variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductImages"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "image1": {
      "id": 45,
      "local": "numquam-maxime-perspiciatis.gif",
      "remote": "",
      "width": 347,
      "height": 917,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T13:04:55.2227009Z",
      "section_type": "PRODUCT"
    },
    "image2": {
      "id": 45,
      "local": "",
      "remote": "http://elvera.name/qui-neque-voluptas.gif",
      "width": 123,
      "height": 287,
      "location": "",
      "upload_date": "2021-04-04T08:13:01.5434131Z",
      "section_type": "PRODUCT"
    },
    "image3": {
      "id": 45,
      "local": "",
      "remote": "",
      "width": 485,
      "height": 418,
      "location": "No image available",
      "upload_date": "2021-04-04T02:08:31.4741498Z",
      "section_type": "PRODUCT"
    },
    "image4": {
      "id": 45,
      "local": "quibusdam-veniam-occaecati.gif",
      "remote": "",
      "width": 373,
      "height": 397,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T16:36:00.6157975Z",
      "section_type": "PRODUCT"
    },
    "image5": {
      "id": 45,
      "local": "enim-assumenda-sed.gif",
      "remote": "",
      "width": 557,
      "height": 534,
      "location": "/ekmps/shops/[username]/images",
      "upload_date": "2021-04-04T15:14:45.5808057Z",
      "section_type": "PRODUCT"
    }
  }
}
              }
            }
          },
          "404": {
            "description": "The variant does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/products/{id}/variants/{variantId}/stock": {
      "get": {
        "tags": [
          "ProductVariantStock"
        ],
        "summary": "Get a product variant stock",
        "operationId": "ProductVariantStock_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The varaint ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The varaint ID",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariantStock"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 10,
    "parent_product_id": 1,
    "stock": 89
  }
}
              }
            }
          },
          "404": {
            "description": "No variant found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "ProductVariantStock"
        ],
        "summary": "Update a product variant stock",
        "operationId": "ProductVariantStock_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The product ID",
              "format": "int64"
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "The varaint ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The varaint ID",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ProductVariantStock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated variant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariantStock"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 10,
    "parent_product_id": 1,
    "stock": 89
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseV1ProductVariantStock"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "No product or variant for that ID found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "id"
      ],
      "error_message": "Product \u00271\u0027 not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/tax": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Get the current Tax Settings",
        "operationId": "Tax_GetTaxSettings",
        "responses": {
          "200": {
            "description": "The tax settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxSettings"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "charge_tax": true,
    "products_include_tax": true,
    "products_price_include_exclude_tax": true,
    "delivery_tax": 1,
    "delivery_show_tax": false,
    "tax_rates": [
      {
        "id": 1,
        "name": "Standard Rate",
        "value": 20.0
      },
      {
        "id": 2,
        "name": "Exempt",
        "value": 0.0
      },
      {
        "id": 3,
        "name": "Reduced Rate",
        "value": 5.0
      },
      {
        "id": 4,
        "name": "Zero",
        "value": 0.0
      }
    ],
    "country_codes": [
      {
        "id": 501,
        "country": "United States",
        "country_code": "US",
        "currency": "US Dollar",
        "charge_tax": false
      },
      {
        "id": 498,
        "country": "United Kingdom",
        "country_code": "GB",
        "currency": "Pound Sterling",
        "charge_tax": true
      }
    ]
  }
}
              }
            }
          },
          "404": {
            "description": "Tax settings not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Tax Settings not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Update the current Tax Settings",
        "operationId": "Tax_UpdateTaxSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tax settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxSettings"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "charge_tax": true,
    "products_include_tax": true,
    "products_price_include_exclude_tax": true,
    "delivery_tax": 1,
    "delivery_show_tax": false,
    "tax_rates": [
      {
        "id": 1,
        "name": "Standard Rate",
        "value": 20.0
      },
      {
        "id": 2,
        "name": "Exempt",
        "value": 0.0
      },
      {
        "id": 3,
        "name": "Reduced Rate",
        "value": 5.0
      },
      {
        "id": 4,
        "name": "Zero",
        "value": 0.0
      }
    ],
    "country_codes": [
      {
        "id": 501,
        "country": "United States",
        "country_code": "US",
        "currency": "US Dollar",
        "charge_tax": false
      },
      {
        "id": 498,
        "country": "United Kingdom",
        "country_code": "GB",
        "currency": "Pound Sterling",
        "charge_tax": true
      }
    ]
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Tax settings not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Tax Settings not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/tax/rates": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Get a list of Tax Rates",
        "operationId": "Tax_GetTaxRates",
        "responses": {
          "200": {
            "description": "The tax rates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseListTaxRateModel"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": [
    {
      "id": 1,
      "name": "Standard Rate",
      "value": 20.0
    },
    {
      "id": 2,
      "name": "Exempt",
      "value": 0.0
    },
    {
      "id": 3,
      "name": "Reduced Rate",
      "value": 5.0
    },
    {
      "id": 4,
      "name": "Zero",
      "value": 0.0
    }
  ]
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Add a Tax Rate",
        "operationId": "Tax_CreateTaxRate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxRateModel"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "name": "Standard Rate",
    "value": 20.0
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Tax rate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Tax Settings not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    },
    "/api/v1/settings/tax/rates/{id}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Get a specific Tax Rate",
        "operationId": "Tax_GetTaxRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxRateModel"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "name": "Standard Rate",
    "value": 20.0
  }
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Update a Tax Rate",
        "operationId": "Tax_UpdateTaxRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxRateModel"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": {
    "id": 1,
    "name": "Standard Rate",
    "value": 20.0
  }
}
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": [
        "name"
      ],
      "error_message": "The name field is required."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Tax rate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Tax Settings not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Delete a Tax Rate",
        "operationId": "Tax_DeleteTaxRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTaxRateModel"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": null,
  "errors": null,
  "data": null
}
              }
            }
          },
          "404": {
            "description": "Tax rate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempestResponseTempestValidationError"
                },
                "example": {
  "meta": {},
  "links": [],
  "validation_result": [
    {
      "member_names": null,
      "error_message": "Tax Settings not found."
    }
  ],
  "errors": null,
  "data": null
}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          { }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TempestLink": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestValidationError": {
        "type": "object",
        "properties": {
          "member_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1Category": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "in_category_description": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          },
          "live": {
            "type": "boolean"
          },
          "parent_category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "image_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "in_category_image_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1Category": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1Category"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseTempestValidationError": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TempestValidationError"
          }
        },
        "additionalProperties": false
      },
      "V1UpdateCategory": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "in_category_description": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          },
          "live": {
            "type": "boolean"
          },
          "parent_category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1Category": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1Category"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1AddCategory": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "in_category_description": {
            "type": "string",
            "nullable": true
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          },
          "live": {
            "type": "boolean"
          },
          "parent_category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1SubCategory": {
        "type": "object",
        "properties": {
          "parent_category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          },
          "live": {
            "type": "boolean"
          },
          "is_category_managed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1SubCategory": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1SubCategory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1SubCategory": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1SubCategory"
          }
        },
        "additionalProperties": false
      },
      "V1CategoryFilters": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "condition": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1CategoryFilters": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1CategoryFilters"
          }
        },
        "additionalProperties": false
      },
      "V1CustomerAddress": {
        "required": [
          "address",
          "country",
          "post_code",
          "town"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "is_preferred_billing_address": {
            "type": "boolean"
          },
          "is_preferred_shipping_address": {
            "type": "boolean"
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string"
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string"
          },
          "friendly_country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "post_code": {
            "type": "string"
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1CustomerAddress": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1CustomerAddress"
          }
        },
        "additionalProperties": false
      },
      "V1Customer": {
        "required": [
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email_address": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "order_count": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points": {
            "type": "number",
            "format": "double"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "modified_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_attempt_date": {
            "type": "string",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean"
          },
          "locked_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locked_end_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_subscribed_to_newsletter": {
            "type": "boolean"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1CustomerAddress"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1Customer": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1Customer"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1CustomerAddress": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1CustomerAddress"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1UpdateCustomer": {
        "required": [
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email_address": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "order_count": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points": {
            "type": "number",
            "format": "double"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "modified_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_attempt_date": {
            "type": "string",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean"
          },
          "locked_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locked_end_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_subscribed_to_newsletter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1Customer": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1Customer"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1AddCustomer": {
        "required": [
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "email_address": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "order_count": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points": {
            "type": "number",
            "format": "double"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "modified_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_login_attempt_date": {
            "type": "string",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean"
          },
          "locked_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "locked_end_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_subscribed_to_newsletter": {
            "type": "boolean"
          },
          "send_email": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V1DomainName": {
        "type": "object",
        "properties": {
          "primary_domain_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1DomainName": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1DomainName"
          }
        },
        "additionalProperties": false
      },
      "V1ShippingAddress": {
        "required": [
          "address",
          "country",
          "first_name",
          "last_name",
          "post_code",
          "town"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "is_preferred_billing_address": {
            "type": "boolean"
          },
          "is_preferred_shipping_address": {
            "type": "boolean"
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string"
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string"
          },
          "friendly_country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "post_code": {
            "type": "string"
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1OrderCustomerDetails": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "email_address": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "friendly_country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "post_code": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "billing_address_verified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V2Order": {
        "required": [
          "id",
          "order_date",
          "order_number",
          "order_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "is_confirmed": {
            "type": "boolean"
          },
          "sub_total": {
            "type": "number",
            "format": "double"
          },
          "total_delivery": {
            "type": "number",
            "format": "double"
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "total_cost": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "payment_status": {
            "type": "string",
            "nullable": true
          },
          "delivery_method": {
            "type": "string",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "nullable": true
          },
          "transaction_status": {
            "type": "string",
            "nullable": true
          },
          "order_type": {
            "type": "string"
          },
          "use_shipping_address": {
            "type": "boolean"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/V1ShippingAddress"
          },
          "internal_notes": {
            "type": "string",
            "nullable": true
          },
          "customer_facing_notes": {
            "type": "string",
            "nullable": true
          },
          "emailed": {
            "type": "boolean"
          },
          "discounts": {
            "type": "string",
            "nullable": true
          },
          "discounts_total": {
            "type": "number",
            "format": "double"
          },
          "shipping_company": {
            "type": "string",
            "nullable": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delivery_tax_rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "delivery_includes_tax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "custom_fields_total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "custom_fields_tax_total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customer_details": {
            "$ref": "#/components/schemas/V1OrderCustomerDetails"
          },
          "custom_fields": {
            "type": "string",
            "nullable": true
          },
          "delivery_tracking_number": {
            "type": "string",
            "nullable": true
          },
          "delivery_tracking_company": {
            "type": "string",
            "nullable": true
          },
          "delivery_tracking_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV2Order": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V2Order"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV2Order": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V2Order"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1OrderStatus": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "email_customer": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V2OrderItem": {
        "required": [
          "id",
          "order_id",
          "order_number",
          "product_code",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "item_delivery": {
            "type": "number",
            "format": "double"
          },
          "item_discount": {
            "type": "number",
            "format": "double"
          },
          "item_id": {
            "type": "integer",
            "format": "int32"
          },
          "item_name": {
            "type": "string",
            "nullable": true
          },
          "item_options": {
            "type": "string",
            "nullable": true
          },
          "item_order_note": {
            "type": "string",
            "nullable": true
          },
          "item_price": {
            "type": "number",
            "format": "double"
          },
          "item_tax": {
            "type": "number",
            "format": "double"
          },
          "item_tax_id": {
            "type": "integer",
            "format": "int32"
          },
          "item_tax_rate": {
            "type": "number",
            "format": "double"
          },
          "order_number": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "product_code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV2OrderItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V2OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV2OrderItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V2OrderItem"
          }
        },
        "additionalProperties": false
      },
      "V1OrderDeliveryTracking": {
        "type": "object",
        "properties": {
          "delivery_tracking_number": {
            "type": "string",
            "nullable": true
          },
          "delivery_tracking_company": {
            "type": "string",
            "nullable": true
          },
          "delivery_tracking_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1OrderStatusSetting": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "show_in_quick_stats": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V1OrderStatuses": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1OrderStatusSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1OrderStatuses": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1OrderStatuses"
          }
        },
        "additionalProperties": false
      },
      "PlanRestriction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "upgrade_plan_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanRestriction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListPlan": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponsePlan": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Plan"
          }
        },
        "additionalProperties": false
      },
      "V1ProductAttributeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "attribute_key": {
            "type": "string",
            "nullable": true
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "attribute_value": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "ebay_attribute_name": {
            "type": "string",
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductAttributeItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductAttributeItem"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1ProductAttributeItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductAttributeItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ProductAttribute": {
        "required": [
          "attribute_key",
          "visible_name"
        ],
        "type": "object",
        "properties": {
          "attribute_key": {
            "type": "string"
          },
          "visible_name": {
            "type": "string"
          },
          "system_attribute": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductAttribute": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductAttribute"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1ProductAttribute": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ProductOptionItem": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product_option_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "is_placeholder": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductOptionItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductOptionItem"
          }
        },
        "additionalProperties": false
      },
      "V1ProductOption": {
        "required": [
          "name",
          "size"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "is_required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "option_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductOptionItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1ProductOption": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1AddProductOption": {
        "required": [
          "name",
          "size"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "is_required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductOption": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductOption"
          }
        },
        "additionalProperties": false
      },
      "V1UpdateProductOption": {
        "required": [
          "name",
          "size"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "is_required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "V1VariantCombination": {
        "required": [
          "variant_choice",
          "variant_name"
        ],
        "type": "object",
        "properties": {
          "variant_name": {
            "type": "string"
          },
          "variant_choice": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "V1ProductVariant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "parent_product_id": {
            "type": "integer",
            "format": "int64"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "rrp": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "is_default_variant": {
            "type": "boolean"
          },
          "number_in_stock": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "nullable": true
          },
          "live": {
            "type": "boolean"
          },
          "variant_combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1VariantCombination"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ProductCategory": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int64"
          },
          "is_category_managed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "V1Product": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "nullable": true
          },
          "number_in_stock": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "rrp": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "charge_delivery": {
            "type": "boolean"
          },
          "special_offer": {
            "type": "boolean"
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "nullable": true
          },
          "product_weight": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "can_be_added_to_cart": {
            "type": "boolean"
          },
          "tax_applicable": {
            "type": "boolean"
          },
          "tax_rate_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "live": {
            "type": "boolean"
          },
          "order_note": {
            "type": "string",
            "nullable": true
          },
          "redirect_url": {
            "type": "string",
            "nullable": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "total_product_stock": {
            "type": "integer",
            "format": "int64"
          },
          "parent_product_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductOption"
            },
            "nullable": true
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductVariant"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductCategory"
            },
            "nullable": true
          },
          "attribute_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductAttributeItem"
            },
            "nullable": true
          },
          "order_location": {
            "type": "integer",
            "format": "int64"
          },
          "seo_friendly_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1Product": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1Product"
          }
        },
        "additionalProperties": false
      },
      "V1UpdateProduct": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "nullable": true
          },
          "number_in_stock": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "rrp": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "charge_delivery": {
            "type": "boolean"
          },
          "special_offer": {
            "type": "boolean"
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "nullable": true
          },
          "product_weight": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "can_be_added_to_cart": {
            "type": "boolean"
          },
          "tax_applicable": {
            "type": "boolean"
          },
          "live": {
            "type": "boolean"
          },
          "order_note": {
            "type": "string",
            "nullable": true
          },
          "redirect_url": {
            "type": "string",
            "nullable": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "total_product_stock": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1Product": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1Product"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1AddProduct": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "nullable": true
          },
          "number_in_stock": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "rrp": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "product_code": {
            "type": "string",
            "nullable": true
          },
          "charge_delivery": {
            "type": "boolean"
          },
          "special_offer": {
            "type": "boolean"
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "nullable": true
          },
          "product_weight": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "can_be_added_to_cart": {
            "type": "boolean"
          },
          "tax_applicable": {
            "type": "boolean"
          },
          "live": {
            "type": "boolean"
          },
          "order_note": {
            "type": "string",
            "nullable": true
          },
          "redirect_url": {
            "type": "string",
            "nullable": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "meta_description": {
            "type": "string",
            "nullable": true
          },
          "meta_keywords": {
            "type": "string",
            "nullable": true
          },
          "meta_title": {
            "type": "string",
            "nullable": true
          },
          "total_product_stock": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductCategory": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductCategory"
          }
        },
        "additionalProperties": false
      },
      "V1ProductImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "local": {
            "type": "string",
            "nullable": true
          },
          "remote": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "upload_date": {
            "type": "string",
            "format": "date-time"
          },
          "section_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ProductImages": {
        "type": "object",
        "properties": {
          "image1": {
            "$ref": "#/components/schemas/V1ProductImage"
          },
          "image2": {
            "$ref": "#/components/schemas/V1ProductImage"
          },
          "image3": {
            "$ref": "#/components/schemas/V1ProductImage"
          },
          "image4": {
            "$ref": "#/components/schemas/V1ProductImage"
          },
          "image5": {
            "$ref": "#/components/schemas/V1ProductImage"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductImages": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductImages"
          }
        },
        "additionalProperties": false
      },
      "V1ProductStock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "stock": {
            "type": "integer",
            "format": "int64"
          },
          "total_product_stock": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductStock": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductStock"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListV1ProductVariant": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1ProductVariant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductVariant": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductVariant"
          }
        },
        "additionalProperties": false
      },
      "V1ProductVariantStock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "parent_product_id": {
            "type": "integer",
            "format": "int64"
          },
          "stock": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseV1ProductVariantStock": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/V1ProductVariantStock"
          }
        },
        "additionalProperties": false
      },
      "DeliveryTax": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaxRateModel": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CountryCodeModel": {
        "required": [
          "country",
          "country_code",
          "currency"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "charge_tax": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaxSettings": {
        "type": "object",
        "properties": {
          "charge_tax": {
            "type": "boolean"
          },
          "products_include_tax": {
            "type": "boolean"
          },
          "products_price_include_exclude_tax": {
            "type": "boolean"
          },
          "delivery_tax": {
            "$ref": "#/components/schemas/DeliveryTax"
          },
          "delivery_show_tax": {
            "type": "boolean"
          },
          "tax_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateModel"
            },
            "nullable": true
          },
          "country_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCodeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseTaxSettings": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TaxSettings"
          }
        },
        "additionalProperties": false
      },
      "TempestResponseListTaxRateModel": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempestResponseTaxRateModel": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestLink"
            },
            "nullable": true
          },
          "validation_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempestValidationError"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TaxRateModel"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "description": "In order to ensure the safety of our users data, we require all partner applications to register via the [Partner Dashboard](https://partners.ekm.net/). Once registered, partners are provided with an application key, which can be used during an OAuth2 handshake to create a token. This token can then used to make requests on behalf of a merchant. We have a [Guide](https://docs.google.com/document/d/1Y26QJmrXi6NBID34E4M6G9D0_A-jLiNtGb9kHvGw69A/edit?usp=sharing) on using OAuth2 that many people find helpful.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.ekm.net/connect/authorize",
            "tokenUrl": "https://api.ekm.net/connect/token",
            "refreshUrl": "https://api.ekm.net/connect/token",
            "scopes": {
              "openid": "Access a shops identity token.",
              "profile": "Read a user's details. (name, email, etc)",
              "tempest.internal.orders.read": "Internal - Read a shop's orders.",
              "tempest.customers.read": "Read a shop's customers.",
              "tempest.customers.write": "Modify a shop's customers.",
              "tempest.Guests.read": "Read a shop's Guests.",
              "tempest.Guests.write": "Modify a shop's Guests.",
              "tempest.orders.read": "Read a shop's orders.",
              "tempest.orders.write": "Modify a shop's orders.",
              "tempest.orders.customers.notes.read": "Read a shop's order customer notes.",
              "tempest.orders.customers.notes.write": "Modify a shop's order customer notes.",
              "tempest.products.read": "Read a shop's products.",
              "tempest.products.write": "Modify a shop's products.",
              "tempest.categories.read": "Read a shop's categories.",
              "tempest.categories.write": "Modify a shop's categories.",
              "tempest.settings.orderstatuses.read": "Read a shop's order statuses.",
              "tempest.settings.domains.read": "Read a shop's domains.",
              "tempest.settings.accountdetails.read": "Read a shop's account details.",
              "tempest.settings.tax.read": "Read a shop's tax settings.",
              "tempest.settings.tax.write": "Write a shop's tax settings.",
              "tempest.settings.currency.read": "Read a shop's currency settings.",
              "tempest.cartsessions.read": "Read a shop's cart sessions.",
              "tempest.cartsessions.write": "Modify a shop's cart sessions.",
              "tempest.cart.read": "Read a shop's cart",
              "tempest.cart.write": "Modify a shop's cart."
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "OData",
      "description": "We make use of a [third party library](https://github.com/jlamfers/XPression/)\r\nto provide us with OData $filter syntax support for our search endpoints, but\r\nthis library only supports a [subset of the OData syntax](https://github.com/jlamfers/XPression/blob/5e61157400264c96615e9e53b272ebefede97182/XPression/Language/Syntax/ODataSyntax.cs).\r\nMost basic queries will work but only specific functions are supported (e.g. contains)\r\n\r\nWe perform ordering via a separate `orderby` parameter. You can pass any field name\r\nin the response to order by that field. Prefixing the field with '-' will sort\r\nin descending order.\r\n\r\nFor example, sorting products by id, ascending:\r\n\r\n`/api/v1/products/search?page=1&limit=10&orderby=id&query=contains(tolower(name), 'ekm')`\r\n\r\nOr sorting by name, descending:\r\n\r\n`/api/v1/products/search?page=1&limit=10&orderby=-name&query=contains(tolower(name), 'ekm')`",
      "x-traitTag": true
    },
    {
      "name": "Plan Restrictions",
      "description": "We have several plans ([Viewable here](https://www.ekm.com/ecommerce/cost)) with different features and restrictions.\r\nThese restrictions are enforced by returning a `PlanRestrictionViolation` error.\r\nThe value of this error is the `Id` of a Restriction on the shop's current [Plan](#tag/Plans).\r\n\r\nPlan Restrictions' contain a UI friendly message for display to the merchant when appropriate, as well as the Id of the Plan\r\nthat the merchant would need to upgrade to in order to overcome this restriction.",
      "x-traitTag": true
    },
    {
      "name": "Rate Limits",
      "description": "We make use of the leaky bucket algorithm to limit the rate that clients can make requests to a given merchants data.\r\n\r\nLimits are currently only applied between a given application and merchant, not to the application as a whole.\r\n\r\nWhen an application exceeds its rate limit, the API will begin responding with 429 (Too Many Requests) status codes until there is enough\r\nallowance to serve the request.\r\n\r\n| Configuration Item | Value | Description |\r\n|---|:-----:|-----------|\r\n| Request Cost | 1 | Each request adds a single token to the bucket |\r\n| Bucket Size | 40 | The bucket can contain a maximum of 40 tokens at any time |\r\n| Leak Interval | 1 second | The bucket leaks once per second |\r\n| Leak Amount | 2 | The bucket leaks 2 tokens per interval |\r\n\r\nAll of this information is also sent back on every request in the headers, so that consumers can monitor it for changes.\r\n\r\n| Header Name | Corresponding Configuration Item |\r\n|-------------|----------------------------------|\r\n| X-EKM-RateLimit-Cost | Request Cost |\r\n| X-EKM-RateLimit-BucketSize | Bucket Size |\r\n| X-EKM-RateLimit-LeakRate | Leak Interval |\r\n| X-EKM-RateLimit-LeakAmount | Leak Amount |\r\n| X-EKM-RateLimit-Remaining | The amount of allowance available after this request |\r\n\r\n### Example 1\r\nAn application makes 2 requests per second for a single merchant.\r\nEach second, 2 requests are added to the bucket, and removed as the bucket leaks.\r\nThe application can continue this way indefinitely, as it is not reducing its allowance.\r\n\r\n### Example 2\r\nAn application makes 3 requests per second for a single merchant.\r\nEach second, 3 requests are added to the bucket, and 2 are removed by the leak.\r\nAfter 40 seconds the application runs out of allowance, and begins receiving 429 status codes.\r\n\r\n### Example 3\r\nAn application makes 40 requests at 10:00:00 am for a single merchant.\r\nFrom that point on it continues to make 2 requests per second to the same initial merchant.\r\nThe application can continue this way indefinitely, although it has no extra allowance to cope with a burst of activity.\r\nIf the application has a quiet period later with less requests, the bucket will gradually empty.\r\n\r\n### Example 4\r\nAn application makes 40 requests in a single second to Merchant A.\r\nThe same application then makes a request in the same second to Merchant B.\r\n\r\nAll of these requests are ok, as the rate limit has not been exceeded for any given merchant.",
      "x-traitTag": true
    },
    {
      "name": "Support",
      "description": "As an approved API Partner of EKM, you can benefit from specific technical support for API integrations. While we can only offer a limited amount of support to partners we hope that this support helps you integrate with our platform seamlessly.\r\n\r\n*Please note that we cannot offer partners advice about how or what to build to achieve their requirements.*\r\n\r\nIf you require technical support please submit a support request by completing the following form **[here](https://docs.google.com/forms/d/e/1FAIpQLScCHK2VkEA_b4jdwnQ_pHPjuxJzyVJchs_P-tpZpoYmc4nLyg/viewform).** Providing us with this information will help our support teams to diagnose your issue. ",
      "x-traitTag": true
    },
    {
      "name": "Refresh Tokens",
      "description": "When an application successfully completes the access code flow, we will transmit an access code and a refresh token.\r\nThe access code expires after 1 hour and to get another you must make a request to the token endpoint using the refresh token.\r\nThe request should be a `POST` request to: `https://api.ekm.net/connect/token` including a body with content type of `application/x-www-form-urlencoded` in the following format:\r\n\r\n`client_id={client_id}&client_secret={client_secret}&grant_type=refresh_token&refresh_token={refresh_token}&scope={scopes}`\r\n\r\n| Variable | Description |\r\n|:-----------------:|-------------------|\r\n| client_id | Your applications Client Key, which can be found in the Tokens modal on the partners applications page. |\r\n| client_secret | Your applications Client Secret, which can be found in the Tokens modal on the partners applications page. |\r\n| refresh_token | The refresh token that you were given when receiving the access token. |\r\n| scopes | A space separated list of scopes. These scopes must be selected in the Required Permissions section of the partners applications page for each individual application. **Please note, the \"offline_access\" scope should be added to the list of scopes in order to receive refresh tokens.** |\r\n\r\nYou should receive a new access code, as well as a new refresh token.\r\n\r\n**Please note: Refresh tokens are usable on a one time only basis. When trying to obtain a new access code by making a request to `https://api.ekm.net/connect/token` with the same refresh token more than once will result in an error.**\r\n\r\nRefresh tokens expire 15 days from their most recent usage.\r\n\r\nAccess to the API will continue to be granted, as long as :-\r\n- The refresh token is used within 15 days.\r\n- Consent has not been revoked by the user.\r\n\r\nIf your applications refresh token expires, you must go through the access code flow again.",
      "x-traitTag": true
    }
  ]
}